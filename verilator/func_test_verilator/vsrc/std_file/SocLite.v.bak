module CPU(
  input         clock,
  input         reset,
  input         auto_out_aw_ready,
  output        auto_out_aw_valid,
  output [3:0]  auto_out_aw_bits_id,
  output [31:0] auto_out_aw_bits_addr,
  output [7:0]  auto_out_aw_bits_len,
  output [2:0]  auto_out_aw_bits_size,
  output [1:0]  auto_out_aw_bits_burst,
  output        auto_out_aw_bits_lock,
  output [3:0]  auto_out_aw_bits_cache,
  output [2:0]  auto_out_aw_bits_prot,
  input         auto_out_w_ready,
  output        auto_out_w_valid,
  output [31:0] auto_out_w_bits_data,
  output [3:0]  auto_out_w_bits_strb,
  output        auto_out_w_bits_last,
  output        auto_out_b_ready,
  input         auto_out_b_valid,
  input  [3:0]  auto_out_b_bits_id,
  input  [1:0]  auto_out_b_bits_resp,
  input         auto_out_ar_ready,
  output        auto_out_ar_valid,
  output [3:0]  auto_out_ar_bits_id,
  output [31:0] auto_out_ar_bits_addr,
  output [7:0]  auto_out_ar_bits_len,
  output [2:0]  auto_out_ar_bits_size,
  output [1:0]  auto_out_ar_bits_burst,
  output        auto_out_ar_bits_lock,
  output [3:0]  auto_out_ar_bits_cache,
  output [2:0]  auto_out_ar_bits_prot,
  output        auto_out_r_ready,
  input         auto_out_r_valid,
  input  [3:0]  auto_out_r_bits_id,
  input  [31:0] auto_out_r_bits_data,
  input  [1:0]  auto_out_r_bits_resp,
  input         auto_out_r_bits_last,
  output [31:0] debug_wb_pc,
  output        debug_wb_rf_wen,
  output [4:0]  debug_wb_rf_wnum,
  output [31:0] debug_wb_rf_wdata
);
  wire [3:0] my_cpu_cpu_ar_id; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_cpu_ar_addr; // @[SocLite.scala 82:24]
  wire [7:0] my_cpu_cpu_ar_len; // @[SocLite.scala 82:24]
  wire [2:0] my_cpu_cpu_ar_size; // @[SocLite.scala 82:24]
  wire [1:0] my_cpu_cpu_ar_burst; // @[SocLite.scala 82:24]
  wire my_cpu_cpu_ar_lock; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_ar_cache; // @[SocLite.scala 82:24]
  wire [2:0] my_cpu_cpu_ar_prot; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_ar_qos; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_r_id; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_cpu_r_data; // @[SocLite.scala 82:24]
  wire [1:0] my_cpu_cpu_r_resp; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_r_last; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_aw_id; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_cpu_aw_addr; // @[SocLite.scala 82:24]
  wire [7:0] my_cpu_cpu_aw_len; // @[SocLite.scala 82:24]
  wire [2:0] my_cpu_cpu_aw_size; // @[SocLite.scala 82:24]
  wire [1:0] my_cpu_cpu_aw_burst; // @[SocLite.scala 82:24]
  wire my_cpu_cpu_aw_lock; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_aw_cache; // @[SocLite.scala 82:24]
  wire [2:0] my_cpu_cpu_aw_prot; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_aw_qos; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_cpu_w_data; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_w_strb; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_w_last; // @[SocLite.scala 82:24]
  wire [3:0] my_cpu_cpu_b_id; // @[SocLite.scala 82:24]
  wire [1:0] my_cpu_cpu_b_resp; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_ar_valid; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_aw_valid; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_w_valid; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_ar_ready; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_aw_ready; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_w_ready; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_r_valid; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_b_valid; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_r_ready; // @[SocLite.scala 82:24]
  wire  my_cpu_cpu_b_ready; // @[SocLite.scala 82:24]
  wire [5:0] my_cpu_ext_int; // @[SocLite.scala 82:24]
  wire  my_cpu_aclk; // @[SocLite.scala 82:24]
  wire  my_cpu_aresetn; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_debug_wb_pc; // @[SocLite.scala 82:24]
  wire  my_cpu_debug_wb_rf_wen; // @[SocLite.scala 82:24]
  wire [3:0]  my_cpu_debug_wb_rf_wen_temp; // @[SocLite.scala 82:24]
  assign my_cpu_debug_wb_rf_wen=|my_cpu_debug_wb_rf_wen_temp;
  wire [4:0] my_cpu_debug_wb_rf_wnum; // @[SocLite.scala 82:24]
  wire [31:0] my_cpu_debug_wb_rf_wdata; // @[SocLite.scala 82:24]

  wire [3:0] my_cpu_cpu_w_id; // @[SocLite.scala 82:24]
  wire [3:0] arlentemp;
  wire [3:0] awlentemp;
  assign my_cpu_cpu_ar_len= {4'b0,arlentemp};
  assign my_cpu_cpu_aw_len= {4'b0,awlentemp};
  wire arlock_temp;
  wire awlock_temp;


  mycpu_top my_cpu ( // @[SocLite.scala 82:24]
    .arid(my_cpu_cpu_ar_id),
    .araddr(my_cpu_cpu_ar_addr),
    .arlen(arlentemp),
    .arsize(my_cpu_cpu_ar_size),
    .arburst(my_cpu_cpu_ar_burst),
    .arlock({arlock_temp,my_cpu_cpu_ar_lock}),
    .arcache(my_cpu_cpu_ar_cache),
    .arprot(my_cpu_cpu_ar_prot),
    .rid(my_cpu_cpu_r_id),
    .rdata(my_cpu_cpu_r_data),
    .rresp(my_cpu_cpu_r_resp),
    .rlast(my_cpu_cpu_r_last),
    .awid(my_cpu_cpu_aw_id),
    .awaddr(my_cpu_cpu_aw_addr),
    .awlen(awlentemp),
    .awsize(my_cpu_cpu_aw_size),
    .awburst(my_cpu_cpu_aw_burst),
    .awlock({awlock_temp,my_cpu_cpu_aw_lock}),
    .awcache(my_cpu_cpu_aw_cache),
    .awprot(my_cpu_cpu_aw_prot),
    .wid(my_cpu_cpu_w_id),
    .wdata(my_cpu_cpu_w_data),
    .wstrb(my_cpu_cpu_w_strb),
    .wlast(my_cpu_cpu_w_last),
    .bid(my_cpu_cpu_b_id),
    .bresp(my_cpu_cpu_b_resp),
    .arvalid(my_cpu_cpu_ar_valid),
    .awvalid(my_cpu_cpu_aw_valid),
    .wvalid(my_cpu_cpu_w_valid),
    .arready(my_cpu_cpu_ar_ready),
    .awready(my_cpu_cpu_aw_ready),
    .wready(my_cpu_cpu_w_ready),
    .rvalid(my_cpu_cpu_r_valid),
    .bvalid(my_cpu_cpu_b_valid),
    .rready(my_cpu_cpu_r_ready),
    .bready(my_cpu_cpu_b_ready),
    .ext_int(my_cpu_ext_int),
    .aclk(my_cpu_aclk),
    .aresetn(my_cpu_aresetn),
    .debug_wb_pc(my_cpu_debug_wb_pc),
    .debug_wb_rf_wen(my_cpu_debug_wb_rf_wen_temp),
    .debug_wb_rf_wnum(my_cpu_debug_wb_rf_wnum),
    .debug_wb_rf_wdata(my_cpu_debug_wb_rf_wdata)
  );
  assign auto_out_aw_valid = my_cpu_cpu_aw_valid; // @[Nodes.scala 1207:84 SocLite.scala 91:20]
  assign auto_out_aw_bits_id = my_cpu_cpu_aw_id; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_addr = my_cpu_cpu_aw_addr; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_len = my_cpu_cpu_aw_len; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_size = my_cpu_cpu_aw_size; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_burst = my_cpu_cpu_aw_burst; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_lock = my_cpu_cpu_aw_lock; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_cache = my_cpu_cpu_aw_cache; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_aw_bits_prot = my_cpu_cpu_aw_prot; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_w_valid = my_cpu_cpu_w_valid; // @[Nodes.scala 1207:84 SocLite.scala 91:20]
  assign auto_out_w_bits_data = my_cpu_cpu_w_data; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_w_bits_strb = my_cpu_cpu_w_strb; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_w_bits_last = my_cpu_cpu_w_last; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_b_ready = my_cpu_cpu_b_ready; // @[Nodes.scala 1207:84 SocLite.scala 92:20]
  assign auto_out_ar_valid = my_cpu_cpu_ar_valid; // @[Nodes.scala 1207:84 SocLite.scala 91:20]
  assign auto_out_ar_bits_id = my_cpu_cpu_ar_id; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_addr = my_cpu_cpu_ar_addr; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_len = my_cpu_cpu_ar_len; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_size = my_cpu_cpu_ar_size; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_burst = my_cpu_cpu_ar_burst; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_lock = my_cpu_cpu_ar_lock; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_cache = my_cpu_cpu_ar_cache; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_ar_bits_prot = my_cpu_cpu_ar_prot; // @[Nodes.scala 1207:84 SocLite.scala 89:23]
  assign auto_out_r_ready = my_cpu_cpu_r_ready; // @[Nodes.scala 1207:84 SocLite.scala 92:20]
  assign debug_wb_pc = my_cpu_debug_wb_pc; // @[SocLite.scala 97:11]
  assign debug_wb_rf_wen = my_cpu_debug_wb_rf_wen; // @[SocLite.scala 97:11]
  assign debug_wb_rf_wnum = my_cpu_debug_wb_rf_wnum; // @[SocLite.scala 97:11]
  assign debug_wb_rf_wdata = my_cpu_debug_wb_rf_wdata; // @[SocLite.scala 97:11]
  assign my_cpu_cpu_r_id = auto_out_r_bits_id; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_r_data = auto_out_r_bits_data; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_r_resp = auto_out_r_bits_resp; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_r_last = auto_out_r_bits_last; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_b_id = auto_out_b_bits_id; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_b_resp = auto_out_b_bits_resp; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_ar_ready = auto_out_ar_ready; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_aw_ready = auto_out_aw_ready; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_w_ready = auto_out_w_ready; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_r_valid = auto_out_r_valid; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_cpu_b_valid = auto_out_b_valid; // @[Nodes.scala 1207:84 LazyModule.scala 311:12]
  assign my_cpu_ext_int = 6'h0; // @[SocLite.scala 94:23]
  assign my_cpu_aclk = clock; // @[SocLite.scala 95:40]
  assign my_cpu_aresetn = ~reset; // @[SocLite.scala 96:26]
endmodule
module QueueCompatibility(
  input        clock,
  input        reset,
  output       io_enq_ready,
  input        io_enq_valid,
  input  [1:0] io_enq_bits,
  input        io_deq_ready,
  output       io_deq_valid,
  output [1:0] io_deq_bits
);
`ifdef RANDOMIZE_MEM_INIT
  reg [31:0] _RAND_0;
`endif // RANDOMIZE_MEM_INIT
`ifdef RANDOMIZE_REG_INIT
  reg [31:0] _RAND_1;
  reg [31:0] _RAND_2;
  reg [31:0] _RAND_3;
`endif // RANDOMIZE_REG_INIT
  reg [1:0] ram [0:1]; // @[Decoupled.scala 218:16]
  wire [1:0] ram_io_deq_bits_MPORT_data; // @[Decoupled.scala 218:16]
  wire  ram_io_deq_bits_MPORT_addr; // @[Decoupled.scala 218:16]
  wire [1:0] ram_MPORT_data; // @[Decoupled.scala 218:16]
  wire  ram_MPORT_addr; // @[Decoupled.scala 218:16]
  wire  ram_MPORT_mask; // @[Decoupled.scala 218:16]
  wire  ram_MPORT_en; // @[Decoupled.scala 218:16]
  reg  enq_ptr_value; // @[Counter.scala 60:40]
  reg  deq_ptr_value; // @[Counter.scala 60:40]
  reg  maybe_full; // @[Decoupled.scala 221:27]
  wire  ptr_match = enq_ptr_value == deq_ptr_value; // @[Decoupled.scala 223:33]
  wire  empty = ptr_match & ~maybe_full; // @[Decoupled.scala 224:25]
  wire  full = ptr_match & maybe_full; // @[Decoupled.scala 225:24]
  wire  _do_enq_T = io_enq_ready & io_enq_valid; // @[Decoupled.scala 40:37]
  wire  _do_deq_T = io_deq_ready & io_deq_valid; // @[Decoupled.scala 40:37]
  wire  _GEN_9 = io_deq_ready ? 1'h0 : _do_enq_T; // @[Decoupled.scala 249:27 Decoupled.scala 249:36]
  wire  do_enq = empty ? _GEN_9 : _do_enq_T; // @[Decoupled.scala 246:18]
  wire  do_deq = empty ? 1'h0 : _do_deq_T; // @[Decoupled.scala 246:18 Decoupled.scala 248:14]
  assign ram_io_deq_bits_MPORT_addr = deq_ptr_value;
  assign ram_io_deq_bits_MPORT_data = ram[ram_io_deq_bits_MPORT_addr]; // @[Decoupled.scala 218:16]
  assign ram_MPORT_data = io_enq_bits;
  assign ram_MPORT_addr = enq_ptr_value;
  assign ram_MPORT_mask = 1'h1;
  assign ram_MPORT_en = empty ? _GEN_9 : _do_enq_T;
  assign io_enq_ready = ~full; // @[Decoupled.scala 241:19]
  assign io_deq_valid = io_enq_valid | ~empty; // @[Decoupled.scala 245:25 Decoupled.scala 245:40 Decoupled.scala 240:16]
  assign io_deq_bits = empty ? io_enq_bits : ram_io_deq_bits_MPORT_data; // @[Decoupled.scala 246:18 Decoupled.scala 247:19 Decoupled.scala 242:15]
  always @(posedge clock) begin
    if(ram_MPORT_en & ram_MPORT_mask) begin
      ram[ram_MPORT_addr] <= ram_MPORT_data; // @[Decoupled.scala 218:16]
    end
    if (reset) begin // @[Counter.scala 60:40]
      enq_ptr_value <= 1'h0; // @[Counter.scala 60:40]
    end else if (do_enq) begin // @[Decoupled.scala 229:17]
      enq_ptr_value <= enq_ptr_value + 1'h1; // @[Counter.scala 76:15]
    end
    if (reset) begin // @[Counter.scala 60:40]
      deq_ptr_value <= 1'h0; // @[Counter.scala 60:40]
    end else if (do_deq) begin // @[Decoupled.scala 233:17]
      deq_ptr_value <= deq_ptr_value + 1'h1; // @[Counter.scala 76:15]
    end
    if (reset) begin // @[Decoupled.scala 221:27]
      maybe_full <= 1'h0; // @[Decoupled.scala 221:27]
    end else if (do_enq != do_deq) begin // @[Decoupled.scala 236:28]
      if (empty) begin // @[Decoupled.scala 246:18]
        if (io_deq_ready) begin // @[Decoupled.scala 249:27]
          maybe_full <= 1'h0; // @[Decoupled.scala 249:36]
        end else begin
          maybe_full <= _do_enq_T;
        end
      end else begin
        maybe_full <= _do_enq_T;
      end
    end
  end
// Register and memory initialization
`ifdef RANDOMIZE_GARBAGE_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_INVALID_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_REG_INIT
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_MEM_INIT
`define RANDOMIZE
`endif
`ifndef RANDOM
`define RANDOM $random
`endif
`ifdef RANDOMIZE_MEM_INIT
  integer initvar;
`endif
`ifndef SYNTHESIS
`ifdef FIRRTL_BEFORE_INITIAL
`FIRRTL_BEFORE_INITIAL
`endif
initial begin
  `ifdef RANDOMIZE
    `ifdef INIT_RANDOM
      `INIT_RANDOM
    `endif
    `ifndef VERILATOR
      `ifdef RANDOMIZE_DELAY
        #`RANDOMIZE_DELAY begin end
      `else
        #0.002 begin end
      `endif
    `endif
`ifdef RANDOMIZE_MEM_INIT
  _RAND_0 = {1{`RANDOM}};
  for (initvar = 0; initvar < 2; initvar = initvar+1)
    ram[initvar] = _RAND_0[1:0];
`endif // RANDOMIZE_MEM_INIT
`ifdef RANDOMIZE_REG_INIT
  _RAND_1 = {1{`RANDOM}};
  enq_ptr_value = _RAND_1[0:0];
  _RAND_2 = {1{`RANDOM}};
  deq_ptr_value = _RAND_2[0:0];
  _RAND_3 = {1{`RANDOM}};
  maybe_full = _RAND_3[0:0];
`endif // RANDOMIZE_REG_INIT
  `endif // RANDOMIZE
end // initial
`ifdef FIRRTL_AFTER_INITIAL
`FIRRTL_AFTER_INITIAL
`endif
`endif // SYNTHESIS
endmodule
module AXI4Xbar(
  input         clock,
  input         reset,
  output        auto_in_aw_ready,
  input         auto_in_aw_valid,
  input  [3:0]  auto_in_aw_bits_id,
  input  [31:0] auto_in_aw_bits_addr,
  input  [7:0]  auto_in_aw_bits_len,
  input  [2:0]  auto_in_aw_bits_size,
  input  [1:0]  auto_in_aw_bits_burst,
  input         auto_in_aw_bits_lock,
  input  [3:0]  auto_in_aw_bits_cache,
  input  [2:0]  auto_in_aw_bits_prot,
  output        auto_in_w_ready,
  input         auto_in_w_valid,
  input  [31:0] auto_in_w_bits_data,
  input  [3:0]  auto_in_w_bits_strb,
  input         auto_in_w_bits_last,
  input         auto_in_b_ready,
  output        auto_in_b_valid,
  output [3:0]  auto_in_b_bits_id,
  output [1:0]  auto_in_b_bits_resp,
  output        auto_in_ar_ready,
  input         auto_in_ar_valid,
  input  [3:0]  auto_in_ar_bits_id,
  input  [31:0] auto_in_ar_bits_addr,
  input  [7:0]  auto_in_ar_bits_len,
  input  [2:0]  auto_in_ar_bits_size,
  input  [1:0]  auto_in_ar_bits_burst,
  input         auto_in_ar_bits_lock,
  input  [3:0]  auto_in_ar_bits_cache,
  input  [2:0]  auto_in_ar_bits_prot,
  input         auto_in_r_ready,
  output        auto_in_r_valid,
  output [3:0]  auto_in_r_bits_id,
  output [31:0] auto_in_r_bits_data,
  output [1:0]  auto_in_r_bits_resp,
  output        auto_in_r_bits_last,
  input         auto_out_1_aw_ready,
  output        auto_out_1_aw_valid,
  output [3:0]  auto_out_1_aw_bits_id,
  output [31:0] auto_out_1_aw_bits_addr,
  output [7:0]  auto_out_1_aw_bits_len,
  output [2:0]  auto_out_1_aw_bits_size,
  output [1:0]  auto_out_1_aw_bits_burst,
  output        auto_out_1_aw_bits_lock,
  output [3:0]  auto_out_1_aw_bits_cache,
  output [2:0]  auto_out_1_aw_bits_prot,
  input         auto_out_1_w_ready,
  output        auto_out_1_w_valid,
  output [31:0] auto_out_1_w_bits_data,
  output [3:0]  auto_out_1_w_bits_strb,
  output        auto_out_1_w_bits_last,
  output        auto_out_1_b_ready,
  input         auto_out_1_b_valid,
  input  [3:0]  auto_out_1_b_bits_id,
  input  [1:0]  auto_out_1_b_bits_resp,
  input         auto_out_1_ar_ready,
  output        auto_out_1_ar_valid,
  output [3:0]  auto_out_1_ar_bits_id,
  output [31:0] auto_out_1_ar_bits_addr,
  output [7:0]  auto_out_1_ar_bits_len,
  output [2:0]  auto_out_1_ar_bits_size,
  output [1:0]  auto_out_1_ar_bits_burst,
  output        auto_out_1_ar_bits_lock,
  output [3:0]  auto_out_1_ar_bits_cache,
  output [2:0]  auto_out_1_ar_bits_prot,
  output        auto_out_1_r_ready,
  input         auto_out_1_r_valid,
  input  [3:0]  auto_out_1_r_bits_id,
  input  [31:0] auto_out_1_r_bits_data,
  input  [1:0]  auto_out_1_r_bits_resp,
  input         auto_out_1_r_bits_last,
  input         auto_out_0_aw_ready,
  output        auto_out_0_aw_valid,
  output [3:0]  auto_out_0_aw_bits_id,
  output [31:0] auto_out_0_aw_bits_addr,
  input         auto_out_0_w_ready,
  output        auto_out_0_w_valid,
  output [31:0] auto_out_0_w_bits_data,
  output [3:0]  auto_out_0_w_bits_strb,
  output        auto_out_0_w_bits_last,
  output        auto_out_0_b_ready,
  input         auto_out_0_b_valid,
  input  [3:0]  auto_out_0_b_bits_id,
  input         auto_out_0_ar_ready,
  output        auto_out_0_ar_valid,
  output [3:0]  auto_out_0_ar_bits_id,
  output [31:0] auto_out_0_ar_bits_addr,
  output [7:0]  auto_out_0_ar_bits_len,
  output [2:0]  auto_out_0_ar_bits_size,
  output [1:0]  auto_out_0_ar_bits_burst,
  output        auto_out_0_r_ready,
  input         auto_out_0_r_valid,
  input  [3:0]  auto_out_0_r_bits_id,
  input  [31:0] auto_out_0_r_bits_data,
  input         auto_out_0_r_bits_last
);
`ifdef RANDOMIZE_REG_INIT
  reg [31:0] _RAND_0;
  reg [31:0] _RAND_1;
  reg [31:0] _RAND_2;
  reg [31:0] _RAND_3;
  reg [31:0] _RAND_4;
  reg [31:0] _RAND_5;
  reg [31:0] _RAND_6;
  reg [31:0] _RAND_7;
  reg [31:0] _RAND_8;
  reg [31:0] _RAND_9;
  reg [31:0] _RAND_10;
  reg [31:0] _RAND_11;
  reg [31:0] _RAND_12;
  reg [31:0] _RAND_13;
  reg [31:0] _RAND_14;
  reg [31:0] _RAND_15;
  reg [31:0] _RAND_16;
  reg [31:0] _RAND_17;
  reg [31:0] _RAND_18;
  reg [31:0] _RAND_19;
  reg [31:0] _RAND_20;
  reg [31:0] _RAND_21;
  reg [31:0] _RAND_22;
  reg [31:0] _RAND_23;
  reg [31:0] _RAND_24;
  reg [31:0] _RAND_25;
  reg [31:0] _RAND_26;
  reg [31:0] _RAND_27;
  reg [31:0] _RAND_28;
  reg [31:0] _RAND_29;
  reg [31:0] _RAND_30;
  reg [31:0] _RAND_31;
  reg [31:0] _RAND_32;
  reg [31:0] _RAND_33;
  reg [31:0] _RAND_34;
  reg [31:0] _RAND_35;
  reg [31:0] _RAND_36;
  reg [31:0] _RAND_37;
  reg [31:0] _RAND_38;
  reg [31:0] _RAND_39;
  reg [31:0] _RAND_40;
  reg [31:0] _RAND_41;
  reg [31:0] _RAND_42;
  reg [31:0] _RAND_43;
  reg [31:0] _RAND_44;
  reg [31:0] _RAND_45;
  reg [31:0] _RAND_46;
  reg [31:0] _RAND_47;
  reg [31:0] _RAND_48;
  reg [31:0] _RAND_49;
  reg [31:0] _RAND_50;
  reg [31:0] _RAND_51;
  reg [31:0] _RAND_52;
  reg [31:0] _RAND_53;
  reg [31:0] _RAND_54;
  reg [31:0] _RAND_55;
  reg [31:0] _RAND_56;
  reg [31:0] _RAND_57;
  reg [31:0] _RAND_58;
  reg [31:0] _RAND_59;
  reg [31:0] _RAND_60;
  reg [31:0] _RAND_61;
  reg [31:0] _RAND_62;
  reg [31:0] _RAND_63;
  reg [31:0] _RAND_64;
  reg [31:0] _RAND_65;
  reg [31:0] _RAND_66;
  reg [31:0] _RAND_67;
  reg [31:0] _RAND_68;
  reg [31:0] _RAND_69;
  reg [31:0] _RAND_70;
  reg [31:0] _RAND_71;
  reg [31:0] _RAND_72;
`endif // RANDOMIZE_REG_INIT
  wire  awIn_0_clock; // @[Xbar.scala 62:47]
  wire  awIn_0_reset; // @[Xbar.scala 62:47]
  wire  awIn_0_io_enq_ready; // @[Xbar.scala 62:47]
  wire  awIn_0_io_enq_valid; // @[Xbar.scala 62:47]
  wire [1:0] awIn_0_io_enq_bits; // @[Xbar.scala 62:47]
  wire  awIn_0_io_deq_ready; // @[Xbar.scala 62:47]
  wire  awIn_0_io_deq_valid; // @[Xbar.scala 62:47]
  wire [1:0] awIn_0_io_deq_bits; // @[Xbar.scala 62:47]
  wire [31:0] _T = auto_in_ar_bits_addr ^ 32'h400000; // @[Parameters.scala 137:31]
  wire [32:0] _T_1 = {1'b0,$signed(_T)}; // @[Parameters.scala 137:49]
  wire [32:0] _T_3 = $signed(_T_1) & 33'sh400000; // @[Parameters.scala 137:52]
  wire  requestARIO_0_0 = $signed(_T_3) == 33'sh0; // @[Parameters.scala 137:67]
  wire [32:0] _T_6 = {1'b0,$signed(auto_in_ar_bits_addr)}; // @[Parameters.scala 137:49]
  wire [32:0] _T_8 = $signed(_T_6) & 33'sh400000; // @[Parameters.scala 137:52]
  wire  requestARIO_0_1 = $signed(_T_8) == 33'sh0; // @[Parameters.scala 137:67]
  wire [31:0] _T_10 = auto_in_aw_bits_addr ^ 32'h400000; // @[Parameters.scala 137:31]
  wire [32:0] _T_11 = {1'b0,$signed(_T_10)}; // @[Parameters.scala 137:49]
  wire [32:0] _T_13 = $signed(_T_11) & 33'sh400000; // @[Parameters.scala 137:52]
  wire  requestAWIO_0_0 = $signed(_T_13) == 33'sh0; // @[Parameters.scala 137:67]
  wire [32:0] _T_16 = {1'b0,$signed(auto_in_aw_bits_addr)}; // @[Parameters.scala 137:49]
  wire [32:0] _T_18 = $signed(_T_16) & 33'sh400000; // @[Parameters.scala 137:52]
  wire  requestAWIO_0_1 = $signed(_T_18) == 33'sh0; // @[Parameters.scala 137:67]
  wire [1:0] _T_48 = {requestAWIO_0_1,requestAWIO_0_0}; // @[Xbar.scala 71:75]
  wire  requestWIO_0_0 = awIn_0_io_deq_bits[0]; // @[Xbar.scala 72:73]
  wire  requestWIO_0_1 = awIn_0_io_deq_bits[1]; // @[Xbar.scala 72:73]
  reg  REG_73; // @[Xbar.scala 249:23]
  wire [1:0] lo = {auto_out_1_r_valid,auto_out_0_r_valid}; // @[Cat.scala 30:58]
  reg [1:0] REG_74; // @[Arbiter.scala 23:23]
  wire [1:0] _T_1086 = ~REG_74; // @[Arbiter.scala 24:30]
  wire [1:0] hi = lo & _T_1086; // @[Arbiter.scala 24:28]
  wire [3:0] _T_1087 = {hi,auto_out_1_r_valid,auto_out_0_r_valid}; // @[Cat.scala 30:58]
  wire [3:0] _GEN_80 = {{1'd0}, _T_1087[3:1]}; // @[package.scala 253:43]
  wire [3:0] _T_1089 = _T_1087 | _GEN_80; // @[package.scala 253:43]
  wire [3:0] _T_1092 = {REG_74, 2'h0}; // @[Arbiter.scala 25:66]
  wire [3:0] _GEN_81 = {{1'd0}, _T_1089[3:1]}; // @[Arbiter.scala 25:58]
  wire [3:0] _T_1093 = _GEN_81 | _T_1092; // @[Arbiter.scala 25:58]
  wire [1:0] _T_1096 = _T_1093[3:2] & _T_1093[1:0]; // @[Arbiter.scala 26:39]
  wire [1:0] _T_1097 = ~_T_1096; // @[Arbiter.scala 26:18]
  wire  _T_1108 = _T_1097[0] & auto_out_0_r_valid; // @[Xbar.scala 257:63]
  reg  REG_75_0; // @[Xbar.scala 268:24]
  wire  _T_1128_0 = REG_73 ? _T_1108 : REG_75_0; // @[Xbar.scala 269:23]
  wire [3:0] _T_1146 = _T_1128_0 ? auto_out_0_r_bits_id : 4'h0; // @[Mux.scala 27:72]
  wire  _T_1109 = _T_1097[1] & auto_out_1_r_valid; // @[Xbar.scala 257:63]
  reg  REG_75_1; // @[Xbar.scala 268:24]
  wire  _T_1128_1 = REG_73 ? _T_1109 : REG_75_1; // @[Xbar.scala 269:23]
  wire [3:0] _T_1147 = _T_1128_1 ? auto_out_1_r_bits_id : 4'h0; // @[Mux.scala 27:72]
  wire [3:0] in_0_r_bits_id = _T_1146 | _T_1147; // @[Mux.scala 27:72]
  reg  REG_76; // @[Xbar.scala 249:23]
  wire [1:0] lo_1 = {auto_out_1_b_valid,auto_out_0_b_valid}; // @[Cat.scala 30:58]
  reg [1:0] REG_77; // @[Arbiter.scala 23:23]
  wire [1:0] _T_1155 = ~REG_77; // @[Arbiter.scala 24:30]
  wire [1:0] hi_1 = lo_1 & _T_1155; // @[Arbiter.scala 24:28]
  wire [3:0] _T_1156 = {hi_1,auto_out_1_b_valid,auto_out_0_b_valid}; // @[Cat.scala 30:58]
  wire [3:0] _GEN_82 = {{1'd0}, _T_1156[3:1]}; // @[package.scala 253:43]
  wire [3:0] _T_1158 = _T_1156 | _GEN_82; // @[package.scala 253:43]
  wire [3:0] _T_1161 = {REG_77, 2'h0}; // @[Arbiter.scala 25:66]
  wire [3:0] _GEN_83 = {{1'd0}, _T_1158[3:1]}; // @[Arbiter.scala 25:58]
  wire [3:0] _T_1162 = _GEN_83 | _T_1161; // @[Arbiter.scala 25:58]
  wire [1:0] _T_1165 = _T_1162[3:2] & _T_1162[1:0]; // @[Arbiter.scala 26:39]
  wire [1:0] _T_1166 = ~_T_1165; // @[Arbiter.scala 26:18]
  wire  _T_1177 = _T_1166[0] & auto_out_0_b_valid; // @[Xbar.scala 257:63]
  reg  REG_78_0; // @[Xbar.scala 268:24]
  wire  _T_1197_0 = REG_76 ? _T_1177 : REG_78_0; // @[Xbar.scala 269:23]
  wire [3:0] _T_1209 = _T_1197_0 ? auto_out_0_b_bits_id : 4'h0; // @[Mux.scala 27:72]
  wire  _T_1178 = _T_1166[1] & auto_out_1_b_valid; // @[Xbar.scala 257:63]
  reg  REG_78_1; // @[Xbar.scala 268:24]
  wire  _T_1197_1 = REG_76 ? _T_1178 : REG_78_1; // @[Xbar.scala 269:23]
  wire [3:0] _T_1210 = _T_1197_1 ? auto_out_1_b_bits_id : 4'h0; // @[Mux.scala 27:72]
  wire [3:0] in_0_b_bits_id = _T_1209 | _T_1210; // @[Mux.scala 27:72]
  wire [15:0] _T_53 = 16'h1 << auto_in_ar_bits_id; // @[OneHot.scala 65:12]
  wire [15:0] _T_55 = 16'h1 << auto_in_aw_bits_id; // @[OneHot.scala 65:12]
  wire [15:0] _T_57 = 16'h1 << in_0_r_bits_id; // @[OneHot.scala 65:12]
  wire [15:0] _T_59 = 16'h1 << in_0_b_bits_id; // @[OneHot.scala 65:12]
  wire [1:0] _T_61 = {requestARIO_0_1,requestARIO_0_0}; // @[Xbar.scala 100:45]
  wire  in_0_ar_ready = requestARIO_0_0 & auto_out_0_ar_ready | requestARIO_0_1 & auto_out_1_ar_ready; // @[Mux.scala 27:72]
  reg [2:0] REG_60; // @[Xbar.scala 111:34]
  reg  REG_61; // @[Xbar.scala 112:29]
  wire  _T_943 = REG_61 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_946 = REG_60 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_948 = (REG_60 == 3'h0 | _T_943) & REG_60 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_56; // @[Xbar.scala 111:34]
  reg  REG_57; // @[Xbar.scala 112:29]
  wire  _T_886 = REG_57 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_889 = REG_56 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_891 = (REG_56 == 3'h0 | _T_886) & REG_56 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_52; // @[Xbar.scala 111:34]
  reg  REG_53; // @[Xbar.scala 112:29]
  wire  _T_829 = REG_53 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_832 = REG_52 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_834 = (REG_52 == 3'h0 | _T_829) & REG_52 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_48; // @[Xbar.scala 111:34]
  reg  REG_49; // @[Xbar.scala 112:29]
  wire  _T_772 = REG_49 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_775 = REG_48 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_777 = (REG_48 == 3'h0 | _T_772) & REG_48 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_44; // @[Xbar.scala 111:34]
  reg  REG_45; // @[Xbar.scala 112:29]
  wire  _T_715 = REG_45 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_718 = REG_44 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_720 = (REG_44 == 3'h0 | _T_715) & REG_44 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_40; // @[Xbar.scala 111:34]
  reg  REG_41; // @[Xbar.scala 112:29]
  wire  _T_658 = REG_41 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_661 = REG_40 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_663 = (REG_40 == 3'h0 | _T_658) & REG_40 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_36; // @[Xbar.scala 111:34]
  reg  REG_37; // @[Xbar.scala 112:29]
  wire  _T_601 = REG_37 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_604 = REG_36 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_606 = (REG_36 == 3'h0 | _T_601) & REG_36 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_32; // @[Xbar.scala 111:34]
  reg  REG_33; // @[Xbar.scala 112:29]
  wire  _T_544 = REG_33 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_547 = REG_32 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_549 = (REG_32 == 3'h0 | _T_544) & REG_32 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_28; // @[Xbar.scala 111:34]
  reg  REG_29; // @[Xbar.scala 112:29]
  wire  _T_487 = REG_29 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_490 = REG_28 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_492 = (REG_28 == 3'h0 | _T_487) & REG_28 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_24; // @[Xbar.scala 111:34]
  reg  REG_25; // @[Xbar.scala 112:29]
  wire  _T_430 = REG_25 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_433 = REG_24 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_435 = (REG_24 == 3'h0 | _T_430) & REG_24 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_20; // @[Xbar.scala 111:34]
  reg  REG_21; // @[Xbar.scala 112:29]
  wire  _T_373 = REG_21 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_376 = REG_20 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_378 = (REG_20 == 3'h0 | _T_373) & REG_20 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_16; // @[Xbar.scala 111:34]
  reg  REG_17; // @[Xbar.scala 112:29]
  wire  _T_316 = REG_17 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_319 = REG_16 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_321 = (REG_16 == 3'h0 | _T_316) & REG_16 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_12; // @[Xbar.scala 111:34]
  reg  REG_13; // @[Xbar.scala 112:29]
  wire  _T_259 = REG_13 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_262 = REG_12 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_264 = (REG_12 == 3'h0 | _T_259) & REG_12 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_8; // @[Xbar.scala 111:34]
  reg  REG_9; // @[Xbar.scala 112:29]
  wire  _T_202 = REG_9 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_205 = REG_8 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_207 = (REG_8 == 3'h0 | _T_202) & REG_8 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_4; // @[Xbar.scala 111:34]
  reg  REG_5; // @[Xbar.scala 112:29]
  wire  _T_145 = REG_5 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_148 = REG_4 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_150 = (REG_4 == 3'h0 | _T_145) & REG_4 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG; // @[Xbar.scala 111:34]
  reg  REG_1; // @[Xbar.scala 112:29]
  wire  _T_88 = REG_1 == _T_61[1]; // @[Xbar.scala 118:75]
  wire  _T_91 = REG != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_93 = (REG == 3'h0 | _T_88) & REG != 3'h7; // @[Xbar.scala 119:48]
  wire  _GEN_33 = 4'h1 == auto_in_ar_bits_id ? _T_150 : _T_93; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_34 = 4'h2 == auto_in_ar_bits_id ? _T_207 : _GEN_33; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_35 = 4'h3 == auto_in_ar_bits_id ? _T_264 : _GEN_34; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_36 = 4'h4 == auto_in_ar_bits_id ? _T_321 : _GEN_35; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_37 = 4'h5 == auto_in_ar_bits_id ? _T_378 : _GEN_36; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_38 = 4'h6 == auto_in_ar_bits_id ? _T_435 : _GEN_37; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_39 = 4'h7 == auto_in_ar_bits_id ? _T_492 : _GEN_38; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_40 = 4'h8 == auto_in_ar_bits_id ? _T_549 : _GEN_39; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_41 = 4'h9 == auto_in_ar_bits_id ? _T_606 : _GEN_40; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_42 = 4'ha == auto_in_ar_bits_id ? _T_663 : _GEN_41; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_43 = 4'hb == auto_in_ar_bits_id ? _T_720 : _GEN_42; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_44 = 4'hc == auto_in_ar_bits_id ? _T_777 : _GEN_43; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_45 = 4'hd == auto_in_ar_bits_id ? _T_834 : _GEN_44; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_46 = 4'he == auto_in_ar_bits_id ? _T_891 : _GEN_45; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  _GEN_47 = 4'hf == auto_in_ar_bits_id ? _T_948 : _GEN_46; // @[Xbar.scala 136:45 Xbar.scala 136:45]
  wire  io_in_0_ar_ready = in_0_ar_ready & _GEN_47; // @[Xbar.scala 137:45]
  wire  _T_66 = io_in_0_ar_ready & auto_in_ar_valid; // @[Decoupled.scala 40:37]
  wire  _T_67 = _T_53[0] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_1080 = auto_out_0_r_valid | auto_out_1_r_valid; // @[Xbar.scala 253:36]
  wire  _T_1135 = REG_75_0 & auto_out_0_r_valid | REG_75_1 & auto_out_1_r_valid; // @[Mux.scala 27:72]
  wire  in_0_r_valid = REG_73 ? _T_1080 : _T_1135; // @[Xbar.scala 285:22]
  wire  _T_69 = auto_in_r_ready & in_0_r_valid; // @[Decoupled.scala 40:37]
  wire  in_0_r_bits_last = _T_1128_0 & auto_out_0_r_bits_last | _T_1128_1 & auto_out_1_r_bits_last; // @[Mux.scala 27:72]
  wire  _T_71 = _T_57[0] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_84 = {{2'd0}, _T_67}; // @[Xbar.scala 113:30]
  wire [2:0] _T_73 = REG + _GEN_84; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_85 = {{2'd0}, _T_71}; // @[Xbar.scala 113:48]
  wire [2:0] _T_75 = _T_73 - _GEN_85; // @[Xbar.scala 113:48]
  wire  in_0_aw_ready = requestAWIO_0_0 & auto_out_0_aw_ready | requestAWIO_0_1 & auto_out_1_aw_ready; // @[Mux.scala 27:72]
  reg  REG_64; // @[Xbar.scala 144:30]
  wire  _T_982 = REG_64 | awIn_0_io_enq_ready; // @[Xbar.scala 146:57]
  reg [2:0] REG_62; // @[Xbar.scala 111:34]
  reg  REG_63; // @[Xbar.scala 112:29]
  wire  _T_971 = REG_63 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_974 = REG_62 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_976 = (REG_62 == 3'h0 | _T_971) & REG_62 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_58; // @[Xbar.scala 111:34]
  reg  REG_59; // @[Xbar.scala 112:29]
  wire  _T_914 = REG_59 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_917 = REG_58 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_919 = (REG_58 == 3'h0 | _T_914) & REG_58 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_54; // @[Xbar.scala 111:34]
  reg  REG_55; // @[Xbar.scala 112:29]
  wire  _T_857 = REG_55 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_860 = REG_54 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_862 = (REG_54 == 3'h0 | _T_857) & REG_54 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_50; // @[Xbar.scala 111:34]
  reg  REG_51; // @[Xbar.scala 112:29]
  wire  _T_800 = REG_51 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_803 = REG_50 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_805 = (REG_50 == 3'h0 | _T_800) & REG_50 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_46; // @[Xbar.scala 111:34]
  reg  REG_47; // @[Xbar.scala 112:29]
  wire  _T_743 = REG_47 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_746 = REG_46 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_748 = (REG_46 == 3'h0 | _T_743) & REG_46 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_42; // @[Xbar.scala 111:34]
  reg  REG_43; // @[Xbar.scala 112:29]
  wire  _T_686 = REG_43 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_689 = REG_42 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_691 = (REG_42 == 3'h0 | _T_686) & REG_42 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_38; // @[Xbar.scala 111:34]
  reg  REG_39; // @[Xbar.scala 112:29]
  wire  _T_629 = REG_39 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_632 = REG_38 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_634 = (REG_38 == 3'h0 | _T_629) & REG_38 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_34; // @[Xbar.scala 111:34]
  reg  REG_35; // @[Xbar.scala 112:29]
  wire  _T_572 = REG_35 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_575 = REG_34 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_577 = (REG_34 == 3'h0 | _T_572) & REG_34 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_30; // @[Xbar.scala 111:34]
  reg  REG_31; // @[Xbar.scala 112:29]
  wire  _T_515 = REG_31 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_518 = REG_30 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_520 = (REG_30 == 3'h0 | _T_515) & REG_30 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_26; // @[Xbar.scala 111:34]
  reg  REG_27; // @[Xbar.scala 112:29]
  wire  _T_458 = REG_27 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_461 = REG_26 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_463 = (REG_26 == 3'h0 | _T_458) & REG_26 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_22; // @[Xbar.scala 111:34]
  reg  REG_23; // @[Xbar.scala 112:29]
  wire  _T_401 = REG_23 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_404 = REG_22 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_406 = (REG_22 == 3'h0 | _T_401) & REG_22 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_18; // @[Xbar.scala 111:34]
  reg  REG_19; // @[Xbar.scala 112:29]
  wire  _T_344 = REG_19 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_347 = REG_18 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_349 = (REG_18 == 3'h0 | _T_344) & REG_18 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_14; // @[Xbar.scala 111:34]
  reg  REG_15; // @[Xbar.scala 112:29]
  wire  _T_287 = REG_15 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_290 = REG_14 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_292 = (REG_14 == 3'h0 | _T_287) & REG_14 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_10; // @[Xbar.scala 111:34]
  reg  REG_11; // @[Xbar.scala 112:29]
  wire  _T_230 = REG_11 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_233 = REG_10 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_235 = (REG_10 == 3'h0 | _T_230) & REG_10 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_6; // @[Xbar.scala 111:34]
  reg  REG_7; // @[Xbar.scala 112:29]
  wire  _T_173 = REG_7 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_176 = REG_6 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_178 = (REG_6 == 3'h0 | _T_173) & REG_6 != 3'h7; // @[Xbar.scala 119:48]
  reg [2:0] REG_2; // @[Xbar.scala 111:34]
  reg  REG_3; // @[Xbar.scala 112:29]
  wire  _T_116 = REG_3 == _T_48[1]; // @[Xbar.scala 118:75]
  wire  _T_119 = REG_2 != 3'h7; // @[Xbar.scala 119:80]
  wire  _T_121 = (REG_2 == 3'h0 | _T_116) & REG_2 != 3'h7; // @[Xbar.scala 119:48]
  wire  _GEN_49 = 4'h1 == auto_in_aw_bits_id ? _T_178 : _T_121; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_50 = 4'h2 == auto_in_aw_bits_id ? _T_235 : _GEN_49; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_51 = 4'h3 == auto_in_aw_bits_id ? _T_292 : _GEN_50; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_52 = 4'h4 == auto_in_aw_bits_id ? _T_349 : _GEN_51; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_53 = 4'h5 == auto_in_aw_bits_id ? _T_406 : _GEN_52; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_54 = 4'h6 == auto_in_aw_bits_id ? _T_463 : _GEN_53; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_55 = 4'h7 == auto_in_aw_bits_id ? _T_520 : _GEN_54; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_56 = 4'h8 == auto_in_aw_bits_id ? _T_577 : _GEN_55; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_57 = 4'h9 == auto_in_aw_bits_id ? _T_634 : _GEN_56; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_58 = 4'ha == auto_in_aw_bits_id ? _T_691 : _GEN_57; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_59 = 4'hb == auto_in_aw_bits_id ? _T_748 : _GEN_58; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_60 = 4'hc == auto_in_aw_bits_id ? _T_805 : _GEN_59; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_61 = 4'hd == auto_in_aw_bits_id ? _T_862 : _GEN_60; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_62 = 4'he == auto_in_aw_bits_id ? _T_919 : _GEN_61; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  _GEN_63 = 4'hf == auto_in_aw_bits_id ? _T_976 : _GEN_62; // @[Xbar.scala 145:82 Xbar.scala 145:82]
  wire  io_in_0_aw_ready = in_0_aw_ready & (REG_64 | awIn_0_io_enq_ready) & _GEN_63; // @[Xbar.scala 146:82]
  wire  _T_95 = io_in_0_aw_ready & auto_in_aw_valid; // @[Decoupled.scala 40:37]
  wire  _T_96 = _T_55[0] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_1149 = auto_out_0_b_valid | auto_out_1_b_valid; // @[Xbar.scala 253:36]
  wire  _T_1204 = REG_78_0 & auto_out_0_b_valid | REG_78_1 & auto_out_1_b_valid; // @[Mux.scala 27:72]
  wire  in_0_b_valid = REG_76 ? _T_1149 : _T_1204; // @[Xbar.scala 285:22]
  wire  _T_98 = auto_in_b_ready & in_0_b_valid; // @[Decoupled.scala 40:37]
  wire  _T_99 = _T_59[0] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_86 = {{2'd0}, _T_96}; // @[Xbar.scala 113:30]
  wire [2:0] _T_101 = REG_2 + _GEN_86; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_87 = {{2'd0}, _T_99}; // @[Xbar.scala 113:48]
  wire [2:0] _T_103 = _T_101 - _GEN_87; // @[Xbar.scala 113:48]
  wire  _T_124 = _T_53[1] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_128 = _T_57[1] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_88 = {{2'd0}, _T_124}; // @[Xbar.scala 113:30]
  wire [2:0] _T_130 = REG_4 + _GEN_88; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_89 = {{2'd0}, _T_128}; // @[Xbar.scala 113:48]
  wire [2:0] _T_132 = _T_130 - _GEN_89; // @[Xbar.scala 113:48]
  wire  _T_153 = _T_55[1] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_156 = _T_59[1] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_90 = {{2'd0}, _T_153}; // @[Xbar.scala 113:30]
  wire [2:0] _T_158 = REG_6 + _GEN_90; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_91 = {{2'd0}, _T_156}; // @[Xbar.scala 113:48]
  wire [2:0] _T_160 = _T_158 - _GEN_91; // @[Xbar.scala 113:48]
  wire  _T_181 = _T_53[2] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_185 = _T_57[2] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_92 = {{2'd0}, _T_181}; // @[Xbar.scala 113:30]
  wire [2:0] _T_187 = REG_8 + _GEN_92; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_93 = {{2'd0}, _T_185}; // @[Xbar.scala 113:48]
  wire [2:0] _T_189 = _T_187 - _GEN_93; // @[Xbar.scala 113:48]
  wire  _T_210 = _T_55[2] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_213 = _T_59[2] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_94 = {{2'd0}, _T_210}; // @[Xbar.scala 113:30]
  wire [2:0] _T_215 = REG_10 + _GEN_94; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_95 = {{2'd0}, _T_213}; // @[Xbar.scala 113:48]
  wire [2:0] _T_217 = _T_215 - _GEN_95; // @[Xbar.scala 113:48]
  wire  _T_238 = _T_53[3] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_242 = _T_57[3] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_96 = {{2'd0}, _T_238}; // @[Xbar.scala 113:30]
  wire [2:0] _T_244 = REG_12 + _GEN_96; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_97 = {{2'd0}, _T_242}; // @[Xbar.scala 113:48]
  wire [2:0] _T_246 = _T_244 - _GEN_97; // @[Xbar.scala 113:48]
  wire  _T_267 = _T_55[3] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_270 = _T_59[3] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_98 = {{2'd0}, _T_267}; // @[Xbar.scala 113:30]
  wire [2:0] _T_272 = REG_14 + _GEN_98; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_99 = {{2'd0}, _T_270}; // @[Xbar.scala 113:48]
  wire [2:0] _T_274 = _T_272 - _GEN_99; // @[Xbar.scala 113:48]
  wire  _T_295 = _T_53[4] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_299 = _T_57[4] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_100 = {{2'd0}, _T_295}; // @[Xbar.scala 113:30]
  wire [2:0] _T_301 = REG_16 + _GEN_100; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_101 = {{2'd0}, _T_299}; // @[Xbar.scala 113:48]
  wire [2:0] _T_303 = _T_301 - _GEN_101; // @[Xbar.scala 113:48]
  wire  _T_324 = _T_55[4] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_327 = _T_59[4] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_102 = {{2'd0}, _T_324}; // @[Xbar.scala 113:30]
  wire [2:0] _T_329 = REG_18 + _GEN_102; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_103 = {{2'd0}, _T_327}; // @[Xbar.scala 113:48]
  wire [2:0] _T_331 = _T_329 - _GEN_103; // @[Xbar.scala 113:48]
  wire  _T_352 = _T_53[5] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_356 = _T_57[5] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_104 = {{2'd0}, _T_352}; // @[Xbar.scala 113:30]
  wire [2:0] _T_358 = REG_20 + _GEN_104; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_105 = {{2'd0}, _T_356}; // @[Xbar.scala 113:48]
  wire [2:0] _T_360 = _T_358 - _GEN_105; // @[Xbar.scala 113:48]
  wire  _T_381 = _T_55[5] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_384 = _T_59[5] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_106 = {{2'd0}, _T_381}; // @[Xbar.scala 113:30]
  wire [2:0] _T_386 = REG_22 + _GEN_106; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_107 = {{2'd0}, _T_384}; // @[Xbar.scala 113:48]
  wire [2:0] _T_388 = _T_386 - _GEN_107; // @[Xbar.scala 113:48]
  wire  _T_409 = _T_53[6] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_413 = _T_57[6] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_108 = {{2'd0}, _T_409}; // @[Xbar.scala 113:30]
  wire [2:0] _T_415 = REG_24 + _GEN_108; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_109 = {{2'd0}, _T_413}; // @[Xbar.scala 113:48]
  wire [2:0] _T_417 = _T_415 - _GEN_109; // @[Xbar.scala 113:48]
  wire  _T_438 = _T_55[6] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_441 = _T_59[6] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_110 = {{2'd0}, _T_438}; // @[Xbar.scala 113:30]
  wire [2:0] _T_443 = REG_26 + _GEN_110; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_111 = {{2'd0}, _T_441}; // @[Xbar.scala 113:48]
  wire [2:0] _T_445 = _T_443 - _GEN_111; // @[Xbar.scala 113:48]
  wire  _T_466 = _T_53[7] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_470 = _T_57[7] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_112 = {{2'd0}, _T_466}; // @[Xbar.scala 113:30]
  wire [2:0] _T_472 = REG_28 + _GEN_112; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_113 = {{2'd0}, _T_470}; // @[Xbar.scala 113:48]
  wire [2:0] _T_474 = _T_472 - _GEN_113; // @[Xbar.scala 113:48]
  wire  _T_495 = _T_55[7] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_498 = _T_59[7] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_114 = {{2'd0}, _T_495}; // @[Xbar.scala 113:30]
  wire [2:0] _T_500 = REG_30 + _GEN_114; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_115 = {{2'd0}, _T_498}; // @[Xbar.scala 113:48]
  wire [2:0] _T_502 = _T_500 - _GEN_115; // @[Xbar.scala 113:48]
  wire  _T_523 = _T_53[8] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_527 = _T_57[8] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_116 = {{2'd0}, _T_523}; // @[Xbar.scala 113:30]
  wire [2:0] _T_529 = REG_32 + _GEN_116; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_117 = {{2'd0}, _T_527}; // @[Xbar.scala 113:48]
  wire [2:0] _T_531 = _T_529 - _GEN_117; // @[Xbar.scala 113:48]
  wire  _T_552 = _T_55[8] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_555 = _T_59[8] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_118 = {{2'd0}, _T_552}; // @[Xbar.scala 113:30]
  wire [2:0] _T_557 = REG_34 + _GEN_118; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_119 = {{2'd0}, _T_555}; // @[Xbar.scala 113:48]
  wire [2:0] _T_559 = _T_557 - _GEN_119; // @[Xbar.scala 113:48]
  wire  _T_580 = _T_53[9] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_584 = _T_57[9] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_120 = {{2'd0}, _T_580}; // @[Xbar.scala 113:30]
  wire [2:0] _T_586 = REG_36 + _GEN_120; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_121 = {{2'd0}, _T_584}; // @[Xbar.scala 113:48]
  wire [2:0] _T_588 = _T_586 - _GEN_121; // @[Xbar.scala 113:48]
  wire  _T_609 = _T_55[9] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_612 = _T_59[9] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_122 = {{2'd0}, _T_609}; // @[Xbar.scala 113:30]
  wire [2:0] _T_614 = REG_38 + _GEN_122; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_123 = {{2'd0}, _T_612}; // @[Xbar.scala 113:48]
  wire [2:0] _T_616 = _T_614 - _GEN_123; // @[Xbar.scala 113:48]
  wire  _T_637 = _T_53[10] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_641 = _T_57[10] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_124 = {{2'd0}, _T_637}; // @[Xbar.scala 113:30]
  wire [2:0] _T_643 = REG_40 + _GEN_124; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_125 = {{2'd0}, _T_641}; // @[Xbar.scala 113:48]
  wire [2:0] _T_645 = _T_643 - _GEN_125; // @[Xbar.scala 113:48]
  wire  _T_666 = _T_55[10] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_669 = _T_59[10] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_126 = {{2'd0}, _T_666}; // @[Xbar.scala 113:30]
  wire [2:0] _T_671 = REG_42 + _GEN_126; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_127 = {{2'd0}, _T_669}; // @[Xbar.scala 113:48]
  wire [2:0] _T_673 = _T_671 - _GEN_127; // @[Xbar.scala 113:48]
  wire  _T_694 = _T_53[11] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_698 = _T_57[11] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_128 = {{2'd0}, _T_694}; // @[Xbar.scala 113:30]
  wire [2:0] _T_700 = REG_44 + _GEN_128; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_129 = {{2'd0}, _T_698}; // @[Xbar.scala 113:48]
  wire [2:0] _T_702 = _T_700 - _GEN_129; // @[Xbar.scala 113:48]
  wire  _T_723 = _T_55[11] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_726 = _T_59[11] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_130 = {{2'd0}, _T_723}; // @[Xbar.scala 113:30]
  wire [2:0] _T_728 = REG_46 + _GEN_130; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_131 = {{2'd0}, _T_726}; // @[Xbar.scala 113:48]
  wire [2:0] _T_730 = _T_728 - _GEN_131; // @[Xbar.scala 113:48]
  wire  _T_751 = _T_53[12] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_755 = _T_57[12] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_132 = {{2'd0}, _T_751}; // @[Xbar.scala 113:30]
  wire [2:0] _T_757 = REG_48 + _GEN_132; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_133 = {{2'd0}, _T_755}; // @[Xbar.scala 113:48]
  wire [2:0] _T_759 = _T_757 - _GEN_133; // @[Xbar.scala 113:48]
  wire  _T_780 = _T_55[12] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_783 = _T_59[12] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_134 = {{2'd0}, _T_780}; // @[Xbar.scala 113:30]
  wire [2:0] _T_785 = REG_50 + _GEN_134; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_135 = {{2'd0}, _T_783}; // @[Xbar.scala 113:48]
  wire [2:0] _T_787 = _T_785 - _GEN_135; // @[Xbar.scala 113:48]
  wire  _T_808 = _T_53[13] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_812 = _T_57[13] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_136 = {{2'd0}, _T_808}; // @[Xbar.scala 113:30]
  wire [2:0] _T_814 = REG_52 + _GEN_136; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_137 = {{2'd0}, _T_812}; // @[Xbar.scala 113:48]
  wire [2:0] _T_816 = _T_814 - _GEN_137; // @[Xbar.scala 113:48]
  wire  _T_837 = _T_55[13] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_840 = _T_59[13] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_138 = {{2'd0}, _T_837}; // @[Xbar.scala 113:30]
  wire [2:0] _T_842 = REG_54 + _GEN_138; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_139 = {{2'd0}, _T_840}; // @[Xbar.scala 113:48]
  wire [2:0] _T_844 = _T_842 - _GEN_139; // @[Xbar.scala 113:48]
  wire  _T_865 = _T_53[14] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_869 = _T_57[14] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_140 = {{2'd0}, _T_865}; // @[Xbar.scala 113:30]
  wire [2:0] _T_871 = REG_56 + _GEN_140; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_141 = {{2'd0}, _T_869}; // @[Xbar.scala 113:48]
  wire [2:0] _T_873 = _T_871 - _GEN_141; // @[Xbar.scala 113:48]
  wire  _T_894 = _T_55[14] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_897 = _T_59[14] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_142 = {{2'd0}, _T_894}; // @[Xbar.scala 113:30]
  wire [2:0] _T_899 = REG_58 + _GEN_142; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_143 = {{2'd0}, _T_897}; // @[Xbar.scala 113:48]
  wire [2:0] _T_901 = _T_899 - _GEN_143; // @[Xbar.scala 113:48]
  wire  _T_922 = _T_53[15] & _T_66; // @[Xbar.scala 126:25]
  wire  _T_926 = _T_57[15] & _T_69 & in_0_r_bits_last; // @[Xbar.scala 127:45]
  wire [2:0] _GEN_144 = {{2'd0}, _T_922}; // @[Xbar.scala 113:30]
  wire [2:0] _T_928 = REG_60 + _GEN_144; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_145 = {{2'd0}, _T_926}; // @[Xbar.scala 113:48]
  wire [2:0] _T_930 = _T_928 - _GEN_145; // @[Xbar.scala 113:48]
  wire  _T_951 = _T_55[15] & _T_95; // @[Xbar.scala 130:25]
  wire  _T_954 = _T_59[15] & _T_98; // @[Xbar.scala 131:24]
  wire [2:0] _GEN_146 = {{2'd0}, _T_951}; // @[Xbar.scala 113:30]
  wire [2:0] _T_956 = REG_62 + _GEN_146; // @[Xbar.scala 113:30]
  wire [2:0] _GEN_147 = {{2'd0}, _T_954}; // @[Xbar.scala 113:48]
  wire [2:0] _T_958 = _T_956 - _GEN_147; // @[Xbar.scala 113:48]
  wire  in_0_ar_valid = auto_in_ar_valid & _GEN_47; // @[Xbar.scala 136:45]
  wire  in_0_aw_valid = auto_in_aw_valid & _T_982 & _GEN_63; // @[Xbar.scala 145:82]
  wire  _T_987 = awIn_0_io_enq_ready & awIn_0_io_enq_valid; // @[Decoupled.scala 40:37]
  wire  _GEN_64 = _T_987 | REG_64; // @[Xbar.scala 148:38 Xbar.scala 148:48 Xbar.scala 144:30]
  wire  _T_988 = in_0_aw_ready & in_0_aw_valid; // @[Decoupled.scala 40:37]
  wire  in_0_w_valid = auto_in_w_valid & awIn_0_io_deq_valid; // @[Xbar.scala 152:43]
  wire  in_0_w_ready = requestWIO_0_0 & auto_out_0_w_ready | requestWIO_0_1 & auto_out_1_w_ready; // @[Mux.scala 27:72]
  wire  out_0_ar_valid = in_0_ar_valid & requestARIO_0_0; // @[Xbar.scala 229:40]
  wire  out_1_ar_valid = in_0_ar_valid & requestARIO_0_1; // @[Xbar.scala 229:40]
  wire  out_0_aw_valid = in_0_aw_valid & requestAWIO_0_0; // @[Xbar.scala 229:40]
  wire  out_1_aw_valid = in_0_aw_valid & requestAWIO_0_1; // @[Xbar.scala 229:40]
  wire  _T_1015 = ~out_0_aw_valid; // @[Xbar.scala 263:60]
  wire  _T_1031 = ~out_0_ar_valid; // @[Xbar.scala 263:60]
  wire  _T_1049 = ~out_1_aw_valid; // @[Xbar.scala 263:60]
  wire  _T_1065 = ~out_1_ar_valid; // @[Xbar.scala 263:60]
  wire [1:0] _T_1100 = _T_1097 & lo; // @[Arbiter.scala 28:29]
  wire [2:0] _T_1101 = {_T_1100, 1'h0}; // @[package.scala 244:48]
  wire [1:0] _T_1103 = _T_1100 | _T_1101[1:0]; // @[package.scala 244:43]
  wire  _T_1111 = _T_1108 | _T_1109; // @[Xbar.scala 262:50]
  wire  _GEN_75 = _T_1080 ? 1'h0 : REG_73; // @[Xbar.scala 273:21 Xbar.scala 273:28 Xbar.scala 249:23]
  wire  _GEN_76 = _T_69 | _GEN_75; // @[Xbar.scala 274:24 Xbar.scala 274:31]
  wire  _T_1130_0 = REG_73 ? _T_1097[0] : REG_75_0; // @[Xbar.scala 277:24]
  wire  _T_1130_1 = REG_73 ? _T_1097[1] : REG_75_1; // @[Xbar.scala 277:24]
  wire [31:0] _T_1143 = _T_1128_0 ? auto_out_0_r_bits_data : 32'h0; // @[Mux.scala 27:72]
  wire [31:0] _T_1144 = _T_1128_1 ? auto_out_1_r_bits_data : 32'h0; // @[Mux.scala 27:72]
  wire [1:0] _T_1169 = _T_1166 & lo_1; // @[Arbiter.scala 28:29]
  wire [2:0] _T_1170 = {_T_1169, 1'h0}; // @[package.scala 244:48]
  wire [1:0] _T_1172 = _T_1169 | _T_1170[1:0]; // @[package.scala 244:43]
  wire  _T_1180 = _T_1177 | _T_1178; // @[Xbar.scala 262:50]
  wire  _GEN_78 = _T_1149 ? 1'h0 : REG_76; // @[Xbar.scala 273:21 Xbar.scala 273:28 Xbar.scala 249:23]
  wire  _GEN_79 = _T_98 | _GEN_78; // @[Xbar.scala 274:24 Xbar.scala 274:31]
  wire  _T_1199_0 = REG_76 ? _T_1166[0] : REG_78_0; // @[Xbar.scala 277:24]
  wire  _T_1199_1 = REG_76 ? _T_1166[1] : REG_78_1; // @[Xbar.scala 277:24]
  QueueCompatibility awIn_0 ( // @[Xbar.scala 62:47]
    .clock(awIn_0_clock),
    .reset(awIn_0_reset),
    .io_enq_ready(awIn_0_io_enq_ready),
    .io_enq_valid(awIn_0_io_enq_valid),
    .io_enq_bits(awIn_0_io_enq_bits),
    .io_deq_ready(awIn_0_io_deq_ready),
    .io_deq_valid(awIn_0_io_deq_valid),
    .io_deq_bits(awIn_0_io_deq_bits)
  );
  assign auto_in_aw_ready = in_0_aw_ready & (REG_64 | awIn_0_io_enq_ready) & _GEN_63; // @[Xbar.scala 146:82]
  assign auto_in_w_ready = in_0_w_ready & awIn_0_io_deq_valid; // @[Xbar.scala 153:43]
  assign auto_in_b_valid = REG_76 ? _T_1149 : _T_1204; // @[Xbar.scala 285:22]
  assign auto_in_b_bits_id = _T_1209 | _T_1210; // @[Mux.scala 27:72]
  assign auto_in_b_bits_resp = _T_1197_1 ? auto_out_1_b_bits_resp : 2'h0; // @[Mux.scala 27:72]
  assign auto_in_ar_ready = in_0_ar_ready & _GEN_47; // @[Xbar.scala 137:45]
  assign auto_in_r_valid = REG_73 ? _T_1080 : _T_1135; // @[Xbar.scala 285:22]
  assign auto_in_r_bits_id = _T_1146 | _T_1147; // @[Mux.scala 27:72]
  assign auto_in_r_bits_data = _T_1143 | _T_1144; // @[Mux.scala 27:72]
  assign auto_in_r_bits_resp = _T_1128_1 ? auto_out_1_r_bits_resp : 2'h0; // @[Mux.scala 27:72]
  assign auto_in_r_bits_last = _T_1128_0 & auto_out_0_r_bits_last | _T_1128_1 & auto_out_1_r_bits_last; // @[Mux.scala 27:72]
  assign auto_out_1_aw_valid = in_0_aw_valid & requestAWIO_0_1; // @[Xbar.scala 229:40]
  assign auto_out_1_aw_bits_id = auto_in_aw_bits_id; // @[Xbar.scala 86:47]
  assign auto_out_1_aw_bits_addr = auto_in_aw_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_len = auto_in_aw_bits_len; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_size = auto_in_aw_bits_size; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_burst = auto_in_aw_bits_burst; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_lock = auto_in_aw_bits_lock; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_cache = auto_in_aw_bits_cache; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_aw_bits_prot = auto_in_aw_bits_prot; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_w_valid = in_0_w_valid & requestWIO_0_1; // @[Xbar.scala 229:40]
  assign auto_out_1_w_bits_data = auto_in_w_bits_data; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_w_bits_strb = auto_in_w_bits_strb; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_w_bits_last = auto_in_w_bits_last; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_b_ready = auto_in_b_ready & _T_1199_1; // @[Xbar.scala 279:31]
  assign auto_out_1_ar_valid = in_0_ar_valid & requestARIO_0_1; // @[Xbar.scala 229:40]
  assign auto_out_1_ar_bits_id = auto_in_ar_bits_id; // @[Xbar.scala 87:47]
  assign auto_out_1_ar_bits_addr = auto_in_ar_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_len = auto_in_ar_bits_len; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_size = auto_in_ar_bits_size; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_burst = auto_in_ar_bits_burst; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_lock = auto_in_ar_bits_lock; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_cache = auto_in_ar_bits_cache; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_ar_bits_prot = auto_in_ar_bits_prot; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_1_r_ready = auto_in_r_ready & _T_1130_1; // @[Xbar.scala 279:31]
  assign auto_out_0_aw_valid = in_0_aw_valid & requestAWIO_0_0; // @[Xbar.scala 229:40]
  assign auto_out_0_aw_bits_id = auto_in_aw_bits_id; // @[Xbar.scala 86:47]
  assign auto_out_0_aw_bits_addr = auto_in_aw_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_w_valid = in_0_w_valid & requestWIO_0_0; // @[Xbar.scala 229:40]
  assign auto_out_0_w_bits_data = auto_in_w_bits_data; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_w_bits_strb = auto_in_w_bits_strb; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_w_bits_last = auto_in_w_bits_last; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_b_ready = auto_in_b_ready & _T_1199_0; // @[Xbar.scala 279:31]
  assign auto_out_0_ar_valid = in_0_ar_valid & requestARIO_0_0; // @[Xbar.scala 229:40]
  assign auto_out_0_ar_bits_id = auto_in_ar_bits_id; // @[Xbar.scala 87:47]
  assign auto_out_0_ar_bits_addr = auto_in_ar_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_ar_bits_len = auto_in_ar_bits_len; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_ar_bits_size = auto_in_ar_bits_size; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_ar_bits_burst = auto_in_ar_bits_burst; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign auto_out_0_r_ready = auto_in_r_ready & _T_1130_0; // @[Xbar.scala 279:31]
  assign awIn_0_clock = clock;
  assign awIn_0_reset = reset;
  assign awIn_0_io_enq_valid = auto_in_aw_valid & ~REG_64; // @[Xbar.scala 147:51]
  assign awIn_0_io_enq_bits = {requestAWIO_0_1,requestAWIO_0_0}; // @[Xbar.scala 71:75]
  assign awIn_0_io_deq_ready = auto_in_w_valid & auto_in_w_bits_last & in_0_w_ready; // @[Xbar.scala 154:74]
  always @(posedge clock) begin
    REG_73 <= reset | _GEN_76; // @[Xbar.scala 249:23 Xbar.scala 249:23]
    if (reset) begin // @[Arbiter.scala 23:23]
      REG_74 <= 2'h3; // @[Arbiter.scala 23:23]
    end else if (REG_73 & |lo) begin // @[Arbiter.scala 27:32]
      REG_74 <= _T_1103; // @[Arbiter.scala 28:12]
    end
    if (reset) begin // @[Xbar.scala 268:24]
      REG_75_0 <= 1'h0; // @[Xbar.scala 268:24]
    end else if (REG_73) begin // @[Xbar.scala 269:23]
      REG_75_0 <= _T_1108;
    end
    if (reset) begin // @[Xbar.scala 268:24]
      REG_75_1 <= 1'h0; // @[Xbar.scala 268:24]
    end else if (REG_73) begin // @[Xbar.scala 269:23]
      REG_75_1 <= _T_1109;
    end
    REG_76 <= reset | _GEN_79; // @[Xbar.scala 249:23 Xbar.scala 249:23]
    if (reset) begin // @[Arbiter.scala 23:23]
      REG_77 <= 2'h3; // @[Arbiter.scala 23:23]
    end else if (REG_76 & |lo_1) begin // @[Arbiter.scala 27:32]
      REG_77 <= _T_1172; // @[Arbiter.scala 28:12]
    end
    if (reset) begin // @[Xbar.scala 268:24]
      REG_78_0 <= 1'h0; // @[Xbar.scala 268:24]
    end else if (REG_76) begin // @[Xbar.scala 269:23]
      REG_78_0 <= _T_1177;
    end
    if (reset) begin // @[Xbar.scala 268:24]
      REG_78_1 <= 1'h0; // @[Xbar.scala 268:24]
    end else if (REG_76) begin // @[Xbar.scala 269:23]
      REG_78_1 <= _T_1178;
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_60 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_60 <= _T_930; // @[Xbar.scala 113:21]
    end
    if (_T_922) begin // @[Xbar.scala 116:31]
      REG_61 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_56 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_56 <= _T_873; // @[Xbar.scala 113:21]
    end
    if (_T_865) begin // @[Xbar.scala 116:31]
      REG_57 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_52 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_52 <= _T_816; // @[Xbar.scala 113:21]
    end
    if (_T_808) begin // @[Xbar.scala 116:31]
      REG_53 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_48 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_48 <= _T_759; // @[Xbar.scala 113:21]
    end
    if (_T_751) begin // @[Xbar.scala 116:31]
      REG_49 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_44 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_44 <= _T_702; // @[Xbar.scala 113:21]
    end
    if (_T_694) begin // @[Xbar.scala 116:31]
      REG_45 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_40 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_40 <= _T_645; // @[Xbar.scala 113:21]
    end
    if (_T_637) begin // @[Xbar.scala 116:31]
      REG_41 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_36 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_36 <= _T_588; // @[Xbar.scala 113:21]
    end
    if (_T_580) begin // @[Xbar.scala 116:31]
      REG_37 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_32 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_32 <= _T_531; // @[Xbar.scala 113:21]
    end
    if (_T_523) begin // @[Xbar.scala 116:31]
      REG_33 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_28 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_28 <= _T_474; // @[Xbar.scala 113:21]
    end
    if (_T_466) begin // @[Xbar.scala 116:31]
      REG_29 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_24 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_24 <= _T_417; // @[Xbar.scala 113:21]
    end
    if (_T_409) begin // @[Xbar.scala 116:31]
      REG_25 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_20 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_20 <= _T_360; // @[Xbar.scala 113:21]
    end
    if (_T_352) begin // @[Xbar.scala 116:31]
      REG_21 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_16 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_16 <= _T_303; // @[Xbar.scala 113:21]
    end
    if (_T_295) begin // @[Xbar.scala 116:31]
      REG_17 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_12 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_12 <= _T_246; // @[Xbar.scala 113:21]
    end
    if (_T_238) begin // @[Xbar.scala 116:31]
      REG_13 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_8 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_8 <= _T_189; // @[Xbar.scala 113:21]
    end
    if (_T_181) begin // @[Xbar.scala 116:31]
      REG_9 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_4 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_4 <= _T_132; // @[Xbar.scala 113:21]
    end
    if (_T_124) begin // @[Xbar.scala 116:31]
      REG_5 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG <= _T_75; // @[Xbar.scala 113:21]
    end
    if (_T_67) begin // @[Xbar.scala 116:31]
      REG_1 <= _T_61[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 144:30]
      REG_64 <= 1'h0; // @[Xbar.scala 144:30]
    end else if (_T_988) begin // @[Xbar.scala 149:32]
      REG_64 <= 1'h0; // @[Xbar.scala 149:42]
    end else begin
      REG_64 <= _GEN_64;
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_62 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_62 <= _T_958; // @[Xbar.scala 113:21]
    end
    if (_T_951) begin // @[Xbar.scala 116:31]
      REG_63 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_58 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_58 <= _T_901; // @[Xbar.scala 113:21]
    end
    if (_T_894) begin // @[Xbar.scala 116:31]
      REG_59 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_54 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_54 <= _T_844; // @[Xbar.scala 113:21]
    end
    if (_T_837) begin // @[Xbar.scala 116:31]
      REG_55 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_50 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_50 <= _T_787; // @[Xbar.scala 113:21]
    end
    if (_T_780) begin // @[Xbar.scala 116:31]
      REG_51 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_46 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_46 <= _T_730; // @[Xbar.scala 113:21]
    end
    if (_T_723) begin // @[Xbar.scala 116:31]
      REG_47 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_42 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_42 <= _T_673; // @[Xbar.scala 113:21]
    end
    if (_T_666) begin // @[Xbar.scala 116:31]
      REG_43 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_38 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_38 <= _T_616; // @[Xbar.scala 113:21]
    end
    if (_T_609) begin // @[Xbar.scala 116:31]
      REG_39 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_34 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_34 <= _T_559; // @[Xbar.scala 113:21]
    end
    if (_T_552) begin // @[Xbar.scala 116:31]
      REG_35 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_30 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_30 <= _T_502; // @[Xbar.scala 113:21]
    end
    if (_T_495) begin // @[Xbar.scala 116:31]
      REG_31 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_26 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_26 <= _T_445; // @[Xbar.scala 113:21]
    end
    if (_T_438) begin // @[Xbar.scala 116:31]
      REG_27 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_22 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_22 <= _T_388; // @[Xbar.scala 113:21]
    end
    if (_T_381) begin // @[Xbar.scala 116:31]
      REG_23 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_18 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_18 <= _T_331; // @[Xbar.scala 113:21]
    end
    if (_T_324) begin // @[Xbar.scala 116:31]
      REG_19 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_14 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_14 <= _T_274; // @[Xbar.scala 113:21]
    end
    if (_T_267) begin // @[Xbar.scala 116:31]
      REG_15 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_10 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_10 <= _T_217; // @[Xbar.scala 113:21]
    end
    if (_T_210) begin // @[Xbar.scala 116:31]
      REG_11 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_6 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_6 <= _T_160; // @[Xbar.scala 113:21]
    end
    if (_T_153) begin // @[Xbar.scala 116:31]
      REG_7 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    if (reset) begin // @[Xbar.scala 111:34]
      REG_2 <= 3'h0; // @[Xbar.scala 111:34]
    end else begin
      REG_2 <= _T_103; // @[Xbar.scala 113:21]
    end
    if (_T_96) begin // @[Xbar.scala 116:31]
      REG_3 <= _T_48[1]; // @[Xbar.scala 116:38]
    end
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_71 | REG != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_71 | REG != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_67 | _T_91 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_67 | _T_91 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_99 | REG_2 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_99 | REG_2 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_96 | _T_119 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_96 | _T_119 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_128 | REG_4 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_128 | REG_4 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_124 | _T_148 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_124 | _T_148 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_156 | REG_6 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_156 | REG_6 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_153 | _T_176 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_153 | _T_176 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_185 | REG_8 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_185 | REG_8 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_181 | _T_205 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_181 | _T_205 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_213 | REG_10 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_213 | REG_10 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_210 | _T_233 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_210 | _T_233 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_242 | REG_12 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_242 | REG_12 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_238 | _T_262 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_238 | _T_262 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_270 | REG_14 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_270 | REG_14 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_267 | _T_290 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_267 | _T_290 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_299 | REG_16 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_299 | REG_16 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_295 | _T_319 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_295 | _T_319 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_327 | REG_18 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_327 | REG_18 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_324 | _T_347 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_324 | _T_347 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_356 | REG_20 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_356 | REG_20 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_352 | _T_376 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_352 | _T_376 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_384 | REG_22 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_384 | REG_22 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_381 | _T_404 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_381 | _T_404 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_413 | REG_24 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_413 | REG_24 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_409 | _T_433 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_409 | _T_433 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_441 | REG_26 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_441 | REG_26 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_438 | _T_461 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_438 | _T_461 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_470 | REG_28 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_470 | REG_28 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_466 | _T_490 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_466 | _T_490 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_498 | REG_30 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_498 | REG_30 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_495 | _T_518 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_495 | _T_518 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_527 | REG_32 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_527 | REG_32 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_523 | _T_547 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_523 | _T_547 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_555 | REG_34 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_555 | REG_34 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_552 | _T_575 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_552 | _T_575 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_584 | REG_36 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_584 | REG_36 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_580 | _T_604 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_580 | _T_604 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_612 | REG_38 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_612 | REG_38 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_609 | _T_632 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_609 | _T_632 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_641 | REG_40 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_641 | REG_40 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_637 | _T_661 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_637 | _T_661 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_669 | REG_42 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_669 | REG_42 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_666 | _T_689 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_666 | _T_689 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_698 | REG_44 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_698 | REG_44 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_694 | _T_718 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_694 | _T_718 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_726 | REG_46 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_726 | REG_46 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_723 | _T_746 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_723 | _T_746 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_755 | REG_48 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_755 | REG_48 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_751 | _T_775 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_751 | _T_775 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_783 | REG_50 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_783 | REG_50 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_780 | _T_803 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_780 | _T_803 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_812 | REG_52 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_812 | REG_52 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_808 | _T_832 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_808 | _T_832 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_840 | REG_54 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_840 | REG_54 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_837 | _T_860 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_837 | _T_860 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_869 | REG_56 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_869 | REG_56 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_865 | _T_889 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_865 | _T_889 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_897 | REG_58 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_897 | REG_58 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_894 | _T_917 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_894 | _T_917 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_926 | REG_60 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_926 | REG_60 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_922 | _T_946 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_922 | _T_946 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_954 | REG_62 != 3'h0 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:114 assert (!resp_fire || count =/= UInt(0))\n"); // @[Xbar.scala 114:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_954 | REG_62 != 3'h0 | reset)) begin
          $fatal; // @[Xbar.scala 114:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_951 | _T_974 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:115 assert (!req_fire  || count =/= UInt(flight))\n"
            ); // @[Xbar.scala 115:22]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_951 | _T_974 | reset)) begin
          $fatal; // @[Xbar.scala 115:22]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(_T_1015 | out_0_aw_valid | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(_T_1015 | out_0_aw_valid | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(_T_1031 | out_0_ar_valid | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(_T_1031 | out_0_ar_valid | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(_T_1049 | out_1_aw_valid | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(_T_1049 | out_1_aw_valid | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(_T_1065 | out_1_ar_valid | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(_T_1065 | out_1_ar_valid | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_1108 | ~_T_1109 | reset)) begin
          $fwrite(32'h80000002,
            "Assertion failed\n    at Xbar.scala:263 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n"
            ); // @[Xbar.scala 263:11]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_1108 | ~_T_1109 | reset)) begin
          $fatal; // @[Xbar.scala 263:11]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_1080 | _T_1111 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_1080 | _T_1111 | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_1177 | ~_T_1178 | reset)) begin
          $fwrite(32'h80000002,
            "Assertion failed\n    at Xbar.scala:263 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n"
            ); // @[Xbar.scala 263:11]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_1177 | ~_T_1178 | reset)) begin
          $fatal; // @[Xbar.scala 263:11]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (~(~_T_1149 | _T_1180 | reset)) begin
          $fwrite(32'h80000002,"Assertion failed\n    at Xbar.scala:265 assert (!anyValid || winner.reduce(_||_))\n"); // @[Xbar.scala 265:12]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (~(~_T_1149 | _T_1180 | reset)) begin
          $fatal; // @[Xbar.scala 265:12]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
  end
// Register and memory initialization
`ifdef RANDOMIZE_GARBAGE_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_INVALID_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_REG_INIT
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_MEM_INIT
`define RANDOMIZE
`endif
`ifndef RANDOM
`define RANDOM $random
`endif
`ifdef RANDOMIZE_MEM_INIT
  integer initvar;
`endif
`ifndef SYNTHESIS
`ifdef FIRRTL_BEFORE_INITIAL
`FIRRTL_BEFORE_INITIAL
`endif
initial begin
  `ifdef RANDOMIZE
    `ifdef INIT_RANDOM
      `INIT_RANDOM
    `endif
    `ifndef VERILATOR
      `ifdef RANDOMIZE_DELAY
        #`RANDOMIZE_DELAY begin end
      `else
        #0.002 begin end
      `endif
    `endif
`ifdef RANDOMIZE_REG_INIT
  _RAND_0 = {1{`RANDOM}};
  REG_73 = _RAND_0[0:0];
  _RAND_1 = {1{`RANDOM}};
  REG_74 = _RAND_1[1:0];
  _RAND_2 = {1{`RANDOM}};
  REG_75_0 = _RAND_2[0:0];
  _RAND_3 = {1{`RANDOM}};
  REG_75_1 = _RAND_3[0:0];
  _RAND_4 = {1{`RANDOM}};
  REG_76 = _RAND_4[0:0];
  _RAND_5 = {1{`RANDOM}};
  REG_77 = _RAND_5[1:0];
  _RAND_6 = {1{`RANDOM}};
  REG_78_0 = _RAND_6[0:0];
  _RAND_7 = {1{`RANDOM}};
  REG_78_1 = _RAND_7[0:0];
  _RAND_8 = {1{`RANDOM}};
  REG_60 = _RAND_8[2:0];
  _RAND_9 = {1{`RANDOM}};
  REG_61 = _RAND_9[0:0];
  _RAND_10 = {1{`RANDOM}};
  REG_56 = _RAND_10[2:0];
  _RAND_11 = {1{`RANDOM}};
  REG_57 = _RAND_11[0:0];
  _RAND_12 = {1{`RANDOM}};
  REG_52 = _RAND_12[2:0];
  _RAND_13 = {1{`RANDOM}};
  REG_53 = _RAND_13[0:0];
  _RAND_14 = {1{`RANDOM}};
  REG_48 = _RAND_14[2:0];
  _RAND_15 = {1{`RANDOM}};
  REG_49 = _RAND_15[0:0];
  _RAND_16 = {1{`RANDOM}};
  REG_44 = _RAND_16[2:0];
  _RAND_17 = {1{`RANDOM}};
  REG_45 = _RAND_17[0:0];
  _RAND_18 = {1{`RANDOM}};
  REG_40 = _RAND_18[2:0];
  _RAND_19 = {1{`RANDOM}};
  REG_41 = _RAND_19[0:0];
  _RAND_20 = {1{`RANDOM}};
  REG_36 = _RAND_20[2:0];
  _RAND_21 = {1{`RANDOM}};
  REG_37 = _RAND_21[0:0];
  _RAND_22 = {1{`RANDOM}};
  REG_32 = _RAND_22[2:0];
  _RAND_23 = {1{`RANDOM}};
  REG_33 = _RAND_23[0:0];
  _RAND_24 = {1{`RANDOM}};
  REG_28 = _RAND_24[2:0];
  _RAND_25 = {1{`RANDOM}};
  REG_29 = _RAND_25[0:0];
  _RAND_26 = {1{`RANDOM}};
  REG_24 = _RAND_26[2:0];
  _RAND_27 = {1{`RANDOM}};
  REG_25 = _RAND_27[0:0];
  _RAND_28 = {1{`RANDOM}};
  REG_20 = _RAND_28[2:0];
  _RAND_29 = {1{`RANDOM}};
  REG_21 = _RAND_29[0:0];
  _RAND_30 = {1{`RANDOM}};
  REG_16 = _RAND_30[2:0];
  _RAND_31 = {1{`RANDOM}};
  REG_17 = _RAND_31[0:0];
  _RAND_32 = {1{`RANDOM}};
  REG_12 = _RAND_32[2:0];
  _RAND_33 = {1{`RANDOM}};
  REG_13 = _RAND_33[0:0];
  _RAND_34 = {1{`RANDOM}};
  REG_8 = _RAND_34[2:0];
  _RAND_35 = {1{`RANDOM}};
  REG_9 = _RAND_35[0:0];
  _RAND_36 = {1{`RANDOM}};
  REG_4 = _RAND_36[2:0];
  _RAND_37 = {1{`RANDOM}};
  REG_5 = _RAND_37[0:0];
  _RAND_38 = {1{`RANDOM}};
  REG = _RAND_38[2:0];
  _RAND_39 = {1{`RANDOM}};
  REG_1 = _RAND_39[0:0];
  _RAND_40 = {1{`RANDOM}};
  REG_64 = _RAND_40[0:0];
  _RAND_41 = {1{`RANDOM}};
  REG_62 = _RAND_41[2:0];
  _RAND_42 = {1{`RANDOM}};
  REG_63 = _RAND_42[0:0];
  _RAND_43 = {1{`RANDOM}};
  REG_58 = _RAND_43[2:0];
  _RAND_44 = {1{`RANDOM}};
  REG_59 = _RAND_44[0:0];
  _RAND_45 = {1{`RANDOM}};
  REG_54 = _RAND_45[2:0];
  _RAND_46 = {1{`RANDOM}};
  REG_55 = _RAND_46[0:0];
  _RAND_47 = {1{`RANDOM}};
  REG_50 = _RAND_47[2:0];
  _RAND_48 = {1{`RANDOM}};
  REG_51 = _RAND_48[0:0];
  _RAND_49 = {1{`RANDOM}};
  REG_46 = _RAND_49[2:0];
  _RAND_50 = {1{`RANDOM}};
  REG_47 = _RAND_50[0:0];
  _RAND_51 = {1{`RANDOM}};
  REG_42 = _RAND_51[2:0];
  _RAND_52 = {1{`RANDOM}};
  REG_43 = _RAND_52[0:0];
  _RAND_53 = {1{`RANDOM}};
  REG_38 = _RAND_53[2:0];
  _RAND_54 = {1{`RANDOM}};
  REG_39 = _RAND_54[0:0];
  _RAND_55 = {1{`RANDOM}};
  REG_34 = _RAND_55[2:0];
  _RAND_56 = {1{`RANDOM}};
  REG_35 = _RAND_56[0:0];
  _RAND_57 = {1{`RANDOM}};
  REG_30 = _RAND_57[2:0];
  _RAND_58 = {1{`RANDOM}};
  REG_31 = _RAND_58[0:0];
  _RAND_59 = {1{`RANDOM}};
  REG_26 = _RAND_59[2:0];
  _RAND_60 = {1{`RANDOM}};
  REG_27 = _RAND_60[0:0];
  _RAND_61 = {1{`RANDOM}};
  REG_22 = _RAND_61[2:0];
  _RAND_62 = {1{`RANDOM}};
  REG_23 = _RAND_62[0:0];
  _RAND_63 = {1{`RANDOM}};
  REG_18 = _RAND_63[2:0];
  _RAND_64 = {1{`RANDOM}};
  REG_19 = _RAND_64[0:0];
  _RAND_65 = {1{`RANDOM}};
  REG_14 = _RAND_65[2:0];
  _RAND_66 = {1{`RANDOM}};
  REG_15 = _RAND_66[0:0];
  _RAND_67 = {1{`RANDOM}};
  REG_10 = _RAND_67[2:0];
  _RAND_68 = {1{`RANDOM}};
  REG_11 = _RAND_68[0:0];
  _RAND_69 = {1{`RANDOM}};
  REG_6 = _RAND_69[2:0];
  _RAND_70 = {1{`RANDOM}};
  REG_7 = _RAND_70[0:0];
  _RAND_71 = {1{`RANDOM}};
  REG_2 = _RAND_71[2:0];
  _RAND_72 = {1{`RANDOM}};
  REG_3 = _RAND_72[0:0];
`endif // RANDOMIZE_REG_INIT
  `endif // RANDOMIZE
end // initial
`ifdef FIRRTL_AFTER_INITIAL
`FIRRTL_AFTER_INITIAL
`endif
`endif // SYNTHESIS
endmodule
module SimAXIRAM(
  input         clock,
  input         reset,
  output        auto_in_aw_ready,
  input         auto_in_aw_valid,
  input  [3:0]  auto_in_aw_bits_id,
  input  [31:0] auto_in_aw_bits_addr,
  output        auto_in_w_ready,
  input         auto_in_w_valid,
  input  [31:0] auto_in_w_bits_data,
  input  [3:0]  auto_in_w_bits_strb,
  input         auto_in_w_bits_last,
  input         auto_in_b_ready,
  output        auto_in_b_valid,
  output [3:0]  auto_in_b_bits_id,
  output        auto_in_ar_ready,
  input         auto_in_ar_valid,
  input  [3:0]  auto_in_ar_bits_id,
  input  [31:0] auto_in_ar_bits_addr,
  input  [7:0]  auto_in_ar_bits_len,
  input  [2:0]  auto_in_ar_bits_size,
  input  [1:0]  auto_in_ar_bits_burst,
  input         auto_in_r_ready,
  output        auto_in_r_valid,
  output [3:0]  auto_in_r_bits_id,
  output [31:0] auto_in_r_bits_data,
  output        auto_in_r_bits_last
);
`ifdef RANDOMIZE_REG_INIT
  reg [31:0] _RAND_0;
  reg [31:0] _RAND_1;
  reg [31:0] _RAND_2;
  reg [31:0] _RAND_3;
  reg [31:0] _RAND_4;
  reg [63:0] _RAND_5;
  reg [31:0] _RAND_6;
  reg [31:0] _RAND_7;
  reg [31:0] _RAND_8;
  reg [31:0] _RAND_9;
  reg [31:0] _RAND_10;
  reg [31:0] _RAND_11;
  reg [31:0] _RAND_12;
  reg [31:0] _RAND_13;
  reg [31:0] _RAND_14;
`endif // RANDOMIZE_REG_INIT
  wire  mem_clk; // @[SocLite.scala 324:21]
  wire  mem_en; // @[SocLite.scala 324:21]
  wire [31:0] mem_rIdx; // @[SocLite.scala 324:21]
  wire [31:0] mem_rdata; // @[SocLite.scala 324:21]
  wire [31:0] mem_wIdx; // @[SocLite.scala 324:21]
  wire [31:0] mem_wdata; // @[SocLite.scala 324:21]
  wire [31:0] mem_wmask; // @[SocLite.scala 324:21]
  wire  mem_wen; // @[SocLite.scala 324:21]
  wire [7:0] lo_lo = auto_in_w_bits_strb[0] ? 8'hff : 8'h0; // @[Bitwise.scala 72:12]
  wire [7:0] lo_hi = auto_in_w_bits_strb[1] ? 8'hff : 8'h0; // @[Bitwise.scala 72:12]
  wire [7:0] hi_lo = auto_in_w_bits_strb[2] ? 8'hff : 8'h0; // @[Bitwise.scala 72:12]
  wire [7:0] hi_hi = auto_in_w_bits_strb[3] ? 8'hff : 8'h0; // @[Bitwise.scala 72:12]
  wire [15:0] lo = {lo_hi,lo_lo}; // @[Cat.scala 30:58]
  wire [15:0] hi = {hi_hi,hi_lo}; // @[Cat.scala 30:58]
  reg [7:0] value; // @[Counter.scala 60:40]
  reg [7:0] value_1; // @[Counter.scala 60:40]
  reg  r_busy; // @[SocLite.scala 219:20]
  wire  in_ar_ready = auto_in_r_ready | ~r_busy; // @[SocLite.scala 269:29]
  wire  _T_8 = in_ar_ready & auto_in_ar_valid; // @[Decoupled.scala 40:37]
  reg [7:0] r; // @[Reg.scala 27:20]
  wire [7:0] _GEN_0 = _T_8 ? auto_in_ar_bits_len : r; // @[Reg.scala 28:19 Reg.scala 28:23 Reg.scala 27:20]
  reg [1:0] r_1; // @[Reg.scala 27:20]
  wire [1:0] _GEN_1 = _T_8 ? auto_in_ar_bits_burst : r_1; // @[Reg.scala 28:19 Reg.scala 28:23 Reg.scala 27:20]
  wire [31:0] _WIRE_2 = {{24'd0}, auto_in_ar_bits_len}; // @[SocLite.scala 247:63 SocLite.scala 247:63]
  wire [38:0] _GEN_22 = {{7'd0}, _WIRE_2}; // @[SocLite.scala 247:94]
  wire [38:0] _T_12 = _GEN_22 << auto_in_ar_bits_size; // @[SocLite.scala 247:94]
  wire [38:0] _T_13 = ~_T_12; // @[SocLite.scala 247:38]
  wire [38:0] _GEN_23 = {{7'd0}, auto_in_ar_bits_addr}; // @[SocLite.scala 247:36]
  wire [38:0] _T_14 = _GEN_23 & _T_13; // @[SocLite.scala 247:36]
  reg [38:0] r_2; // @[Reg.scala 27:20]
  wire [38:0] _GEN_2 = _T_8 ? _T_14 : r_2; // @[Reg.scala 28:19 Reg.scala 28:23 Reg.scala 27:20]
  wire  in_r_bits_last = value == _GEN_0; // @[SocLite.scala 249:32]
  wire [7:0] _value_T_1 = value_1 + 8'h1; // @[Counter.scala 76:24]
  wire [7:0] _GEN_3 = _GEN_1 == 2'h2 & value_1 == _GEN_0 ? 8'h0 : _value_T_1; // @[SocLite.scala 252:75 SocLite.scala 252:91 Counter.scala 76:15]
  reg  REG; // @[SocLite.scala 271:17]
  reg  REG_1; // @[SocLite.scala 219:20]
  wire  _T_42 = auto_in_r_ready & REG_1; // @[Decoupled.scala 40:37]
  wire  ren = REG | _T_42 & ~in_r_bits_last; // @[SocLite.scala 271:46]
  wire [7:0] _GEN_4 = ren ? _GEN_3 : value_1; // @[SocLite.scala 250:16 Counter.scala 60:40]
  wire [7:0] _value_T_3 = value + 8'h1; // @[Counter.scala 76:24]
  wire [31:0] _value_T_4 = auto_in_ar_bits_addr >> auto_in_ar_bits_size; // @[SocLite.scala 259:41]
  wire [31:0] _value_T_5 = _value_T_4 & _WIRE_2; // @[SocLite.scala 259:61]
  wire  _T_25 = auto_in_ar_bits_len != 8'h0 & auto_in_ar_bits_burst == 2'h2; // @[SocLite.scala 260:36]
  wire  _T_29 = auto_in_ar_bits_len == 8'h7; // @[SocLite.scala 262:26]
  wire  _T_30 = auto_in_ar_bits_len == 8'h1 | auto_in_ar_bits_len == 8'h3 | _T_29; // @[SocLite.scala 261:65]
  wire  _T_32 = _T_30 | auto_in_ar_bits_len == 8'hf; // @[SocLite.scala 262:34]
  wire [31:0] _GEN_7 = _T_8 ? _value_T_5 : {{24'd0}, _GEN_4}; // @[SocLite.scala 258:25 SocLite.scala 259:21]
  wire  _T_38 = _T_42 & in_r_bits_last; // @[SocLite.scala 268:56]
  wire  _GEN_8 = _T_38 ? 1'h0 : r_busy; // @[SocLite.scala 221:19 SocLite.scala 221:23 SocLite.scala 219:20]
  wire  _GEN_9 = _T_8 | _GEN_8; // @[SocLite.scala 222:20 SocLite.scala 222:24]
  wire  _T_48 = ren & (_T_8 | r_busy); // @[SocLite.scala 272:35]
  wire  _GEN_10 = _T_42 ? 1'h0 : REG_1; // @[SocLite.scala 221:19 SocLite.scala 221:23 SocLite.scala 219:20]
  wire  _GEN_11 = _T_48 | _GEN_10; // @[SocLite.scala 222:20 SocLite.scala 222:24]
  reg [7:0] value_2; // @[Counter.scala 60:40]
  reg  w_busy; // @[SocLite.scala 219:20]
  wire  in_aw_ready = ~w_busy; // @[SocLite.scala 287:18]
  wire  _T_50 = in_aw_ready & auto_in_aw_valid; // @[Decoupled.scala 40:37]
  reg [31:0] r_3; // @[Reg.scala 27:20]
  wire [31:0] _GEN_12 = _T_50 ? auto_in_aw_bits_addr : r_3; // @[Reg.scala 28:19 Reg.scala 28:23 Reg.scala 27:20]
  wire  in_w_ready = auto_in_aw_valid | w_busy; // @[SocLite.scala 288:30]
  wire  _T_52 = in_w_ready & auto_in_w_valid; // @[Decoupled.scala 40:37]
  wire [7:0] _value_T_7 = value_2 + 8'h1; // @[Counter.scala 76:24]
  reg  REG_2; // @[SocLite.scala 219:20]
  wire  _T_54 = auto_in_b_ready & REG_2; // @[Decoupled.scala 40:37]
  wire  _GEN_15 = _T_54 ? 1'h0 : w_busy; // @[SocLite.scala 221:19 SocLite.scala 221:23 SocLite.scala 219:20]
  wire  _GEN_16 = _T_50 | _GEN_15; // @[SocLite.scala 222:20 SocLite.scala 222:24]
  wire  _T_58 = _T_52 & auto_in_w_bits_last; // @[SocLite.scala 290:43]
  wire  _GEN_17 = _T_54 ? 1'h0 : REG_2; // @[SocLite.scala 221:19 SocLite.scala 221:23 SocLite.scala 219:20]
  wire  _GEN_18 = _T_58 | _GEN_17; // @[SocLite.scala 222:20 SocLite.scala 222:24]
  reg [3:0] r_4; // @[Reg.scala 15:16]
  reg [3:0] r_6; // @[Reg.scala 15:16]
  wire [31:0] _T_64 = _GEN_12 & 32'hfffff; // @[SocLite.scala 317:36]
  wire [29:0] _GEN_25 = {{22'd0}, value_2}; // @[SocLite.scala 320:29]
  wire [29:0] wIdx = _T_64[31:2] + _GEN_25; // @[SocLite.scala 320:29]
  wire [38:0] _T_67 = _GEN_2 & 39'hfffff; // @[SocLite.scala 317:36]
  wire [36:0] _GEN_26 = {{29'd0}, value_1}; // @[SocLite.scala 321:29]
  wire [36:0] rIdx = _T_67[38:2] + _GEN_26; // @[SocLite.scala 321:29]
  wire  _T_71 = wIdx < 30'h20000; // @[SocLite.scala 318:34]
  reg [31:0] r_8; // @[Reg.scala 15:16]
  RAMHelper mem ( // @[SocLite.scala 324:21]
    .clk(mem_clk),
    .en(mem_en),
    .rIdx(mem_rIdx),
    .rdata(mem_rdata),
    .wIdx(mem_wIdx),
    .wdata(mem_wdata),
    .wmask(mem_wmask),
    .wen(mem_wen)
  );
  assign auto_in_aw_ready = ~w_busy; // @[SocLite.scala 287:18]
  assign auto_in_w_ready = auto_in_aw_valid | w_busy; // @[SocLite.scala 288:30]
  assign auto_in_b_valid = REG_2; // @[Nodes.scala 1210:84 SocLite.scala 290:14]
  assign auto_in_b_bits_id = r_4; // @[Nodes.scala 1210:84 SocLite.scala 292:18]
  assign auto_in_ar_ready = auto_in_r_ready | ~r_busy; // @[SocLite.scala 269:29]
  assign auto_in_r_valid = REG_1; // @[Nodes.scala 1210:84 SocLite.scala 272:14]
  assign auto_in_r_bits_id = r_6; // @[Nodes.scala 1210:84 SocLite.scala 294:18]
  assign auto_in_r_bits_data = r_8; // @[Nodes.scala 1210:84 SocLite.scala 333:20]
  assign auto_in_r_bits_last = value == _GEN_0; // @[SocLite.scala 249:32]
  assign mem_clk = clock; // @[SocLite.scala 325:16]
  assign mem_en = 1'h1;
  assign mem_rIdx = rIdx[31:0]; // @[SocLite.scala 326:17]
  assign mem_wIdx = {{2'd0}, wIdx}; // @[SocLite.scala 320:29]
  assign mem_wdata = auto_in_w_bits_data; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign mem_wmask = {hi,lo}; // @[Cat.scala 30:58]
  assign mem_wen = _T_52 & _T_71; // @[SocLite.scala 322:27]
  always @(posedge clock) begin
    if (reset) begin // @[Counter.scala 60:40]
      value <= 8'h0; // @[Counter.scala 60:40]
    end else if (_T_42) begin // @[SocLite.scala 254:24]
      if (in_r_bits_last) begin // @[SocLite.scala 256:29]
        value <= 8'h0; // @[SocLite.scala 256:39]
      end else begin
        value <= _value_T_3; // @[Counter.scala 76:15]
      end
    end
    if (reset) begin // @[Counter.scala 60:40]
      value_1 <= 8'h0; // @[Counter.scala 60:40]
    end else begin
      value_1 <= _GEN_7[7:0];
    end
    if (reset) begin // @[SocLite.scala 219:20]
      r_busy <= 1'h0; // @[SocLite.scala 219:20]
    end else begin
      r_busy <= _GEN_9;
    end
    if (reset) begin // @[Reg.scala 27:20]
      r <= 8'h0; // @[Reg.scala 27:20]
    end else if (_T_8) begin // @[Reg.scala 28:19]
      r <= auto_in_ar_bits_len; // @[Reg.scala 28:23]
    end
    if (reset) begin // @[Reg.scala 27:20]
      r_1 <= 2'h0; // @[Reg.scala 27:20]
    end else if (_T_8) begin // @[Reg.scala 28:19]
      r_1 <= auto_in_ar_bits_burst; // @[Reg.scala 28:23]
    end
    if (reset) begin // @[Reg.scala 27:20]
      r_2 <= 39'h0; // @[Reg.scala 27:20]
    end else if (_T_8) begin // @[Reg.scala 28:19]
      r_2 <= _T_14; // @[Reg.scala 28:23]
    end
    if (reset) begin // @[SocLite.scala 271:17]
      REG <= 1'h0; // @[SocLite.scala 271:17]
    end else begin
      REG <= _T_8; // @[SocLite.scala 271:17]
    end
    if (reset) begin // @[SocLite.scala 219:20]
      REG_1 <= 1'h0; // @[SocLite.scala 219:20]
    end else begin
      REG_1 <= _GEN_11;
    end
    if (reset) begin // @[Counter.scala 60:40]
      value_2 <= 8'h0; // @[Counter.scala 60:40]
    end else if (_T_52) begin // @[SocLite.scala 279:24]
      if (auto_in_w_bits_last) begin // @[SocLite.scala 281:29]
        value_2 <= 8'h0; // @[SocLite.scala 281:39]
      end else begin
        value_2 <= _value_T_7; // @[Counter.scala 76:15]
      end
    end
    if (reset) begin // @[SocLite.scala 219:20]
      w_busy <= 1'h0; // @[SocLite.scala 219:20]
    end else begin
      w_busy <= _GEN_16;
    end
    if (reset) begin // @[Reg.scala 27:20]
      r_3 <= 32'h0; // @[Reg.scala 27:20]
    end else if (_T_50) begin // @[Reg.scala 28:19]
      r_3 <= auto_in_aw_bits_addr; // @[Reg.scala 28:23]
    end
    if (reset) begin // @[SocLite.scala 219:20]
      REG_2 <= 1'h0; // @[SocLite.scala 219:20]
    end else begin
      REG_2 <= _GEN_18;
    end
    if (_T_50) begin // @[Reg.scala 16:19]
      r_4 <= auto_in_aw_bits_id; // @[Reg.scala 16:23]
    end
    if (_T_8) begin // @[Reg.scala 16:19]
      r_6 <= auto_in_ar_bits_id; // @[Reg.scala 16:23]
    end
    if (ren) begin // @[Reg.scala 16:19]
      r_8 <= mem_rdata; // @[Reg.scala 16:23]
    end
    `ifndef SYNTHESIS
    `ifdef PRINTF_COND
      if (`PRINTF_COND) begin
    `endif
        if (_T_8 & _T_25 & ~(_T_32 | reset)) begin
          $fwrite(32'h80000002,
            "Assertion failed\n    at SocLite.scala:261 assert(in.ar.bits.len === 1.U || in.ar.bits.len === 3.U ||\n"); // @[SocLite.scala 261:15]
        end
    `ifdef PRINTF_COND
      end
    `endif
    `endif // SYNTHESIS
    `ifndef SYNTHESIS
    `ifdef STOP_COND
      if (`STOP_COND) begin
    `endif
        if (_T_8 & _T_25 & ~(_T_32 | reset)) begin
          $fatal; // @[SocLite.scala 261:15]
        end
    `ifdef STOP_COND
      end
    `endif
    `endif // SYNTHESIS
  end
// Register and memory initialization
`ifdef RANDOMIZE_GARBAGE_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_INVALID_ASSIGN
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_REG_INIT
`define RANDOMIZE
`endif
`ifdef RANDOMIZE_MEM_INIT
`define RANDOMIZE
`endif
`ifndef RANDOM
`define RANDOM $random
`endif
`ifdef RANDOMIZE_MEM_INIT
  integer initvar;
`endif
`ifndef SYNTHESIS
`ifdef FIRRTL_BEFORE_INITIAL
`FIRRTL_BEFORE_INITIAL
`endif
initial begin
  `ifdef RANDOMIZE
    `ifdef INIT_RANDOM
      `INIT_RANDOM
    `endif
    `ifndef VERILATOR
      `ifdef RANDOMIZE_DELAY
        #`RANDOMIZE_DELAY begin end
      `else
        #0.002 begin end
      `endif
    `endif
`ifdef RANDOMIZE_REG_INIT
  _RAND_0 = {1{`RANDOM}};
  value = _RAND_0[7:0];
  _RAND_1 = {1{`RANDOM}};
  value_1 = _RAND_1[7:0];
  _RAND_2 = {1{`RANDOM}};
  r_busy = _RAND_2[0:0];
  _RAND_3 = {1{`RANDOM}};
  r = _RAND_3[7:0];
  _RAND_4 = {1{`RANDOM}};
  r_1 = _RAND_4[1:0];
  _RAND_5 = {2{`RANDOM}};
  r_2 = _RAND_5[38:0];
  _RAND_6 = {1{`RANDOM}};
  REG = _RAND_6[0:0];
  _RAND_7 = {1{`RANDOM}};
  REG_1 = _RAND_7[0:0];
  _RAND_8 = {1{`RANDOM}};
  value_2 = _RAND_8[7:0];
  _RAND_9 = {1{`RANDOM}};
  w_busy = _RAND_9[0:0];
  _RAND_10 = {1{`RANDOM}};
  r_3 = _RAND_10[31:0];
  _RAND_11 = {1{`RANDOM}};
  REG_2 = _RAND_11[0:0];
  _RAND_12 = {1{`RANDOM}};
  r_4 = _RAND_12[3:0];
  _RAND_13 = {1{`RANDOM}};
  r_6 = _RAND_13[3:0];
  _RAND_14 = {1{`RANDOM}};
  r_8 = _RAND_14[31:0];
`endif // RANDOMIZE_REG_INIT
  `endif // RANDOMIZE
end // initial
`ifdef FIRRTL_AFTER_INITIAL
`FIRRTL_AFTER_INITIAL
`endif
`endif // SYNTHESIS
endmodule
module ConfregWrapper(
  input         clock,
  output        auto_in_aw_ready,
  input         auto_in_aw_valid,
  input  [3:0]  auto_in_aw_bits_id,
  input  [31:0] auto_in_aw_bits_addr,
  input  [7:0]  auto_in_aw_bits_len,
  input  [2:0]  auto_in_aw_bits_size,
  input  [1:0]  auto_in_aw_bits_burst,
  input         auto_in_aw_bits_lock,
  input  [3:0]  auto_in_aw_bits_cache,
  input  [2:0]  auto_in_aw_bits_prot,
  output        auto_in_w_ready,
  input         auto_in_w_valid,
  input  [31:0] auto_in_w_bits_data,
  input  [3:0]  auto_in_w_bits_strb,
  input         auto_in_w_bits_last,
  input         auto_in_b_ready,
  output        auto_in_b_valid,
  output [3:0]  auto_in_b_bits_id,
  output [1:0]  auto_in_b_bits_resp,
  output        auto_in_ar_ready,
  input         auto_in_ar_valid,
  input  [3:0]  auto_in_ar_bits_id,
  input  [31:0] auto_in_ar_bits_addr,
  input  [7:0]  auto_in_ar_bits_len,
  input  [2:0]  auto_in_ar_bits_size,
  input  [1:0]  auto_in_ar_bits_burst,
  input         auto_in_ar_bits_lock,
  input  [3:0]  auto_in_ar_bits_cache,
  input  [2:0]  auto_in_ar_bits_prot,
  input         auto_in_r_ready,
  output        auto_in_r_valid,
  output [3:0]  auto_in_r_bits_id,
  output [31:0] auto_in_r_bits_data,
  output [1:0]  auto_in_r_bits_resp,
  output        auto_in_r_bits_last
);
  wire  u_confreg_aclk; // @[SocLite.scala 175:27]
  wire  u_confreg_timer_clk; // @[SocLite.scala 175:27]
  wire  u_confreg_aresetn; // @[SocLite.scala 175:27]
  wire [15:0] u_confreg_led; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_led_rg0; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_led_rg1; // @[SocLite.scala 175:27]
  wire [7:0] u_confreg_num_csn; // @[SocLite.scala 175:27]
  wire [6:0] u_confreg_num_a_g; // @[SocLite.scala 175:27]
  wire [7:0] u_confreg_switch; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_btn_key_col; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_btn_key_row; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_btn_step; // @[SocLite.scala 175:27]
  wire [4:0] u_confreg_ram_random_mask; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_arid; // @[SocLite.scala 175:27]
  wire [31:0] u_confreg_araddr; // @[SocLite.scala 175:27]
  wire [7:0] u_confreg_arlen; // @[SocLite.scala 175:27]
  wire [2:0] u_confreg_arsize; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_arburst; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_arlock; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_arcache; // @[SocLite.scala 175:27]
  wire [2:0] u_confreg_arprot; // @[SocLite.scala 175:27]
  wire  u_confreg_arvalid; // @[SocLite.scala 175:27]
  wire  u_confreg_arready; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_awid; // @[SocLite.scala 175:27]
  wire [31:0] u_confreg_awaddr; // @[SocLite.scala 175:27]
  wire [7:0] u_confreg_awlen; // @[SocLite.scala 175:27]
  wire [2:0] u_confreg_awsize; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_awburst; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_awlock; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_awcache; // @[SocLite.scala 175:27]
  wire [2:0] u_confreg_awprot; // @[SocLite.scala 175:27]
  wire  u_confreg_awvalid; // @[SocLite.scala 175:27]
  wire  u_confreg_awready; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_rid; // @[SocLite.scala 175:27]
  wire [31:0] u_confreg_rdata; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_rresp; // @[SocLite.scala 175:27]
  wire  u_confreg_rlast; // @[SocLite.scala 175:27]
  wire  u_confreg_rvalid; // @[SocLite.scala 175:27]
  wire  u_confreg_rready; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_wid; // @[SocLite.scala 175:27]
  wire [31:0] u_confreg_wdata; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_wstrb; // @[SocLite.scala 175:27]
  wire  u_confreg_wlast; // @[SocLite.scala 175:27]
  wire  u_confreg_wvalid; // @[SocLite.scala 175:27]
  wire  u_confreg_wready; // @[SocLite.scala 175:27]
  wire [3:0] u_confreg_bid; // @[SocLite.scala 175:27]
  wire [1:0] u_confreg_bresp; // @[SocLite.scala 175:27]
  wire  u_confreg_bvalid; // @[SocLite.scala 175:27]
  wire  u_confreg_bready; // @[SocLite.scala 175:27]
  confreg #(.SIMULATION(1'b1)) u_confreg ( // @[SocLite.scala 175:27]
    .aclk(u_confreg_aclk),
    .timer_clk(u_confreg_timer_clk),
    .aresetn(u_confreg_aresetn),
    .led(u_confreg_led),
    .led_rg0(u_confreg_led_rg0),
    .led_rg1(u_confreg_led_rg1),
    .num_csn(u_confreg_num_csn),
    .num_a_g(u_confreg_num_a_g),
    .switch(u_confreg_switch),
    .btn_key_col(u_confreg_btn_key_col),
    .btn_key_row(u_confreg_btn_key_row),
    .btn_step(u_confreg_btn_step),
    .ram_random_mask(u_confreg_ram_random_mask),
    .arid(u_confreg_arid),
    .araddr(u_confreg_araddr),
    .arlen(u_confreg_arlen),
    .arsize(u_confreg_arsize),
    .arburst(u_confreg_arburst),
    .arlock(u_confreg_arlock),
    .arcache(u_confreg_arcache),
    .arprot(u_confreg_arprot),
    .arvalid(u_confreg_arvalid),
    .arready(u_confreg_arready),
    .awid(u_confreg_awid),
    .awaddr(u_confreg_awaddr),
    .awlen(u_confreg_awlen),
    .awsize(u_confreg_awsize),
    .awburst(u_confreg_awburst),
    .awlock(u_confreg_awlock),
    .awcache(u_confreg_awcache),
    .awprot(u_confreg_awprot),
    .awvalid(u_confreg_awvalid),
    .awready(u_confreg_awready),
    .rid(u_confreg_rid),
    .rdata(u_confreg_rdata),
    .rresp(u_confreg_rresp),
    .rlast(u_confreg_rlast),
    .rvalid(u_confreg_rvalid),
    .rready(u_confreg_rready),
    .wid(u_confreg_wid),
    .wdata(u_confreg_wdata),
    .wstrb(u_confreg_wstrb),
    .wlast(u_confreg_wlast),
    .wvalid(u_confreg_wvalid),
    .wready(u_confreg_wready),
    .bid(u_confreg_bid),
    .bresp(u_confreg_bresp),
    .bvalid(u_confreg_bvalid),
    .bready(u_confreg_bready)
  );
  assign auto_in_aw_ready = u_confreg_awready; // @[Nodes.scala 1210:84 SocLite.scala 195:19]
  assign auto_in_w_ready = u_confreg_wready; // @[Nodes.scala 1210:84 SocLite.scala 195:19]
  assign auto_in_b_valid = u_confreg_bvalid; // @[Nodes.scala 1210:84 SocLite.scala 195:19]
  assign auto_in_b_bits_id = u_confreg_bid; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign auto_in_b_bits_resp = u_confreg_bresp; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign auto_in_ar_ready = u_confreg_arready; // @[Nodes.scala 1210:84 SocLite.scala 195:19]
  assign auto_in_r_valid = u_confreg_rvalid; // @[Nodes.scala 1210:84 SocLite.scala 195:19]
  assign auto_in_r_bits_id = u_confreg_rid; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign auto_in_r_bits_data = u_confreg_rdata; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign auto_in_r_bits_resp = u_confreg_rresp; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign auto_in_r_bits_last = u_confreg_rlast; // @[Nodes.scala 1210:84 SocLite.scala 185:19]
  assign u_confreg_aclk = clock; // @[SocLite.scala 201:43]
  assign u_confreg_timer_clk = 1'h0;
  assign u_confreg_aresetn = 1'h1;
  assign u_confreg_switch = 8'hff; // @[SocLite.scala 202:25]
  assign u_confreg_btn_key_row = 4'h0; // @[SocLite.scala 203:30]
  assign u_confreg_btn_step = 2'h3; // @[SocLite.scala 204:27]
  assign u_confreg_arid = auto_in_ar_bits_id; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_araddr = auto_in_ar_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arlen = auto_in_ar_bits_len; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arsize = auto_in_ar_bits_size; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arburst = auto_in_ar_bits_burst; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arlock = {{1'd0}, auto_in_ar_bits_lock}; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arcache = auto_in_ar_bits_cache; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arprot = auto_in_ar_bits_prot; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_arvalid = auto_in_ar_valid; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awid = auto_in_aw_bits_id; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awaddr = auto_in_aw_bits_addr; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awlen = auto_in_aw_bits_len; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awsize = auto_in_aw_bits_size; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awburst = auto_in_aw_bits_burst; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awlock = {{1'd0}, auto_in_aw_bits_lock}; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awcache = auto_in_aw_bits_cache; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awprot = auto_in_aw_bits_prot; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_awvalid = auto_in_aw_valid; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_rready = auto_in_r_ready; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_wid = 4'h0;
  assign u_confreg_wdata = auto_in_w_bits_data; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_wstrb = auto_in_w_bits_strb; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_wlast = auto_in_w_bits_last; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_wvalid = auto_in_w_valid; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
  assign u_confreg_bready = auto_in_b_ready; // @[Nodes.scala 1210:84 LazyModule.scala 309:16]
endmodule
module SocLite(
  input         clock,
  input         reset,
  output [31:0] debug_wb_pc,
  output        debug_wb_rf_wen,
  output [4:0]  debug_wb_rf_wnum,
  output [31:0] debug_wb_rf_wdata
);
  wire  axi_cpu_clock; // @[SocLite.scala 344:27]
  wire  axi_cpu_reset; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_aw_ready; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_aw_valid; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_aw_bits_id; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_auto_out_aw_bits_addr; // @[SocLite.scala 344:27]
  wire [7:0] axi_cpu_auto_out_aw_bits_len; // @[SocLite.scala 344:27]
  wire [2:0] axi_cpu_auto_out_aw_bits_size; // @[SocLite.scala 344:27]
  wire [1:0] axi_cpu_auto_out_aw_bits_burst; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_aw_bits_lock; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_aw_bits_cache; // @[SocLite.scala 344:27]
  wire [2:0] axi_cpu_auto_out_aw_bits_prot; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_w_ready; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_w_valid; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_auto_out_w_bits_data; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_w_bits_strb; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_w_bits_last; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_b_ready; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_b_valid; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_b_bits_id; // @[SocLite.scala 344:27]
  wire [1:0] axi_cpu_auto_out_b_bits_resp; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_ar_ready; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_ar_valid; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_ar_bits_id; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_auto_out_ar_bits_addr; // @[SocLite.scala 344:27]
  wire [7:0] axi_cpu_auto_out_ar_bits_len; // @[SocLite.scala 344:27]
  wire [2:0] axi_cpu_auto_out_ar_bits_size; // @[SocLite.scala 344:27]
  wire [1:0] axi_cpu_auto_out_ar_bits_burst; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_ar_bits_lock; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_ar_bits_cache; // @[SocLite.scala 344:27]
  wire [2:0] axi_cpu_auto_out_ar_bits_prot; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_r_ready; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_r_valid; // @[SocLite.scala 344:27]
  wire [3:0] axi_cpu_auto_out_r_bits_id; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_auto_out_r_bits_data; // @[SocLite.scala 344:27]
  wire [1:0] axi_cpu_auto_out_r_bits_resp; // @[SocLite.scala 344:27]
  wire  axi_cpu_auto_out_r_bits_last; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_debug_wb_pc; // @[SocLite.scala 344:27]
  wire  axi_cpu_debug_wb_rf_wen; // @[SocLite.scala 344:27]
  wire [4:0] axi_cpu_debug_wb_rf_wnum; // @[SocLite.scala 344:27]
  wire [31:0] axi_cpu_debug_wb_rf_wdata; // @[SocLite.scala 344:27]
  wire  axi4xbar_clock; // @[Xbar.scala 218:30]
  wire  axi4xbar_reset; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_aw_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_aw_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_aw_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_in_aw_bits_addr; // @[Xbar.scala 218:30]
  wire [7:0] axi4xbar_auto_in_aw_bits_len; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_in_aw_bits_size; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_in_aw_bits_burst; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_aw_bits_lock; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_aw_bits_cache; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_in_aw_bits_prot; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_w_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_w_valid; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_in_w_bits_data; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_w_bits_strb; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_w_bits_last; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_b_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_b_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_b_bits_id; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_in_b_bits_resp; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_ar_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_ar_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_ar_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_in_ar_bits_addr; // @[Xbar.scala 218:30]
  wire [7:0] axi4xbar_auto_in_ar_bits_len; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_in_ar_bits_size; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_in_ar_bits_burst; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_ar_bits_lock; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_ar_bits_cache; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_in_ar_bits_prot; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_r_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_r_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_in_r_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_in_r_bits_data; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_in_r_bits_resp; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_in_r_bits_last; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_aw_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_aw_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_aw_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_1_aw_bits_addr; // @[Xbar.scala 218:30]
  wire [7:0] axi4xbar_auto_out_1_aw_bits_len; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_out_1_aw_bits_size; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_out_1_aw_bits_burst; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_aw_bits_lock; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_aw_bits_cache; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_out_1_aw_bits_prot; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_w_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_w_valid; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_1_w_bits_data; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_w_bits_strb; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_w_bits_last; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_b_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_b_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_b_bits_id; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_out_1_b_bits_resp; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_ar_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_ar_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_ar_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_1_ar_bits_addr; // @[Xbar.scala 218:30]
  wire [7:0] axi4xbar_auto_out_1_ar_bits_len; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_out_1_ar_bits_size; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_out_1_ar_bits_burst; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_ar_bits_lock; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_ar_bits_cache; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_out_1_ar_bits_prot; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_r_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_r_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_1_r_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_1_r_bits_data; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_out_1_r_bits_resp; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_1_r_bits_last; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_aw_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_aw_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_0_aw_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_0_aw_bits_addr; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_w_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_w_valid; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_0_w_bits_data; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_0_w_bits_strb; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_w_bits_last; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_b_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_b_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_0_b_bits_id; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_ar_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_ar_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_0_ar_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_0_ar_bits_addr; // @[Xbar.scala 218:30]
  wire [7:0] axi4xbar_auto_out_0_ar_bits_len; // @[Xbar.scala 218:30]
  wire [2:0] axi4xbar_auto_out_0_ar_bits_size; // @[Xbar.scala 218:30]
  wire [1:0] axi4xbar_auto_out_0_ar_bits_burst; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_r_ready; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_r_valid; // @[Xbar.scala 218:30]
  wire [3:0] axi4xbar_auto_out_0_r_bits_id; // @[Xbar.scala 218:30]
  wire [31:0] axi4xbar_auto_out_0_r_bits_data; // @[Xbar.scala 218:30]
  wire  axi4xbar_auto_out_0_r_bits_last; // @[Xbar.scala 218:30]
  wire  axi_ram_clock; // @[SocLite.scala 348:27]
  wire  axi_ram_reset; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_aw_ready; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_aw_valid; // @[SocLite.scala 348:27]
  wire [3:0] axi_ram_auto_in_aw_bits_id; // @[SocLite.scala 348:27]
  wire [31:0] axi_ram_auto_in_aw_bits_addr; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_w_ready; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_w_valid; // @[SocLite.scala 348:27]
  wire [31:0] axi_ram_auto_in_w_bits_data; // @[SocLite.scala 348:27]
  wire [3:0] axi_ram_auto_in_w_bits_strb; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_w_bits_last; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_b_ready; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_b_valid; // @[SocLite.scala 348:27]
  wire [3:0] axi_ram_auto_in_b_bits_id; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_ar_ready; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_ar_valid; // @[SocLite.scala 348:27]
  wire [3:0] axi_ram_auto_in_ar_bits_id; // @[SocLite.scala 348:27]
  wire [31:0] axi_ram_auto_in_ar_bits_addr; // @[SocLite.scala 348:27]
  wire [7:0] axi_ram_auto_in_ar_bits_len; // @[SocLite.scala 348:27]
  wire [2:0] axi_ram_auto_in_ar_bits_size; // @[SocLite.scala 348:27]
  wire [1:0] axi_ram_auto_in_ar_bits_burst; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_r_ready; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_r_valid; // @[SocLite.scala 348:27]
  wire [3:0] axi_ram_auto_in_r_bits_id; // @[SocLite.scala 348:27]
  wire [31:0] axi_ram_auto_in_r_bits_data; // @[SocLite.scala 348:27]
  wire  axi_ram_auto_in_r_bits_last; // @[SocLite.scala 348:27]
  wire  confreg_wrapper_clock; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_aw_ready; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_aw_valid; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_aw_bits_id; // @[SocLite.scala 350:35]
  wire [31:0] confreg_wrapper_auto_in_aw_bits_addr; // @[SocLite.scala 350:35]
  wire [7:0] confreg_wrapper_auto_in_aw_bits_len; // @[SocLite.scala 350:35]
  wire [2:0] confreg_wrapper_auto_in_aw_bits_size; // @[SocLite.scala 350:35]
  wire [1:0] confreg_wrapper_auto_in_aw_bits_burst; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_aw_bits_lock; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_aw_bits_cache; // @[SocLite.scala 350:35]
  wire [2:0] confreg_wrapper_auto_in_aw_bits_prot; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_w_ready; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_w_valid; // @[SocLite.scala 350:35]
  wire [31:0] confreg_wrapper_auto_in_w_bits_data; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_w_bits_strb; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_w_bits_last; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_b_ready; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_b_valid; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_b_bits_id; // @[SocLite.scala 350:35]
  wire [1:0] confreg_wrapper_auto_in_b_bits_resp; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_ar_ready; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_ar_valid; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_ar_bits_id; // @[SocLite.scala 350:35]
  wire [31:0] confreg_wrapper_auto_in_ar_bits_addr; // @[SocLite.scala 350:35]
  wire [7:0] confreg_wrapper_auto_in_ar_bits_len; // @[SocLite.scala 350:35]
  wire [2:0] confreg_wrapper_auto_in_ar_bits_size; // @[SocLite.scala 350:35]
  wire [1:0] confreg_wrapper_auto_in_ar_bits_burst; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_ar_bits_lock; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_ar_bits_cache; // @[SocLite.scala 350:35]
  wire [2:0] confreg_wrapper_auto_in_ar_bits_prot; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_r_ready; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_r_valid; // @[SocLite.scala 350:35]
  wire [3:0] confreg_wrapper_auto_in_r_bits_id; // @[SocLite.scala 350:35]
  wire [31:0] confreg_wrapper_auto_in_r_bits_data; // @[SocLite.scala 350:35]
  wire [1:0] confreg_wrapper_auto_in_r_bits_resp; // @[SocLite.scala 350:35]
  wire  confreg_wrapper_auto_in_r_bits_last; // @[SocLite.scala 350:35]
  CPU axi_cpu ( // @[SocLite.scala 344:27]
    .clock(axi_cpu_clock),
    .reset(axi_cpu_reset),
    .auto_out_aw_ready(axi_cpu_auto_out_aw_ready),
    .auto_out_aw_valid(axi_cpu_auto_out_aw_valid),
    .auto_out_aw_bits_id(axi_cpu_auto_out_aw_bits_id),
    .auto_out_aw_bits_addr(axi_cpu_auto_out_aw_bits_addr),
    .auto_out_aw_bits_len(axi_cpu_auto_out_aw_bits_len),
    .auto_out_aw_bits_size(axi_cpu_auto_out_aw_bits_size),
    .auto_out_aw_bits_burst(axi_cpu_auto_out_aw_bits_burst),
    .auto_out_aw_bits_lock(axi_cpu_auto_out_aw_bits_lock),
    .auto_out_aw_bits_cache(axi_cpu_auto_out_aw_bits_cache),
    .auto_out_aw_bits_prot(axi_cpu_auto_out_aw_bits_prot),
    .auto_out_w_ready(axi_cpu_auto_out_w_ready),
    .auto_out_w_valid(axi_cpu_auto_out_w_valid),
    .auto_out_w_bits_data(axi_cpu_auto_out_w_bits_data),
    .auto_out_w_bits_strb(axi_cpu_auto_out_w_bits_strb),
    .auto_out_w_bits_last(axi_cpu_auto_out_w_bits_last),
    .auto_out_b_ready(axi_cpu_auto_out_b_ready),
    .auto_out_b_valid(axi_cpu_auto_out_b_valid),
    .auto_out_b_bits_id(axi_cpu_auto_out_b_bits_id),
    .auto_out_b_bits_resp(axi_cpu_auto_out_b_bits_resp),
    .auto_out_ar_ready(axi_cpu_auto_out_ar_ready),
    .auto_out_ar_valid(axi_cpu_auto_out_ar_valid),
    .auto_out_ar_bits_id(axi_cpu_auto_out_ar_bits_id),
    .auto_out_ar_bits_addr(axi_cpu_auto_out_ar_bits_addr),
    .auto_out_ar_bits_len(axi_cpu_auto_out_ar_bits_len),
    .auto_out_ar_bits_size(axi_cpu_auto_out_ar_bits_size),
    .auto_out_ar_bits_burst(axi_cpu_auto_out_ar_bits_burst),
    .auto_out_ar_bits_lock(axi_cpu_auto_out_ar_bits_lock),
    .auto_out_ar_bits_cache(axi_cpu_auto_out_ar_bits_cache),
    .auto_out_ar_bits_prot(axi_cpu_auto_out_ar_bits_prot),
    .auto_out_r_ready(axi_cpu_auto_out_r_ready),
    .auto_out_r_valid(axi_cpu_auto_out_r_valid),
    .auto_out_r_bits_id(axi_cpu_auto_out_r_bits_id),
    .auto_out_r_bits_data(axi_cpu_auto_out_r_bits_data),
    .auto_out_r_bits_resp(axi_cpu_auto_out_r_bits_resp),
    .auto_out_r_bits_last(axi_cpu_auto_out_r_bits_last),
    .debug_wb_pc(axi_cpu_debug_wb_pc),
    .debug_wb_rf_wen(axi_cpu_debug_wb_rf_wen),
    .debug_wb_rf_wnum(axi_cpu_debug_wb_rf_wnum),
    .debug_wb_rf_wdata(axi_cpu_debug_wb_rf_wdata)
  );
  AXI4Xbar axi4xbar ( // @[Xbar.scala 218:30]
    .clock(axi4xbar_clock),
    .reset(axi4xbar_reset),
    .auto_in_aw_ready(axi4xbar_auto_in_aw_ready),
    .auto_in_aw_valid(axi4xbar_auto_in_aw_valid),
    .auto_in_aw_bits_id(axi4xbar_auto_in_aw_bits_id),
    .auto_in_aw_bits_addr(axi4xbar_auto_in_aw_bits_addr),
    .auto_in_aw_bits_len(axi4xbar_auto_in_aw_bits_len),
    .auto_in_aw_bits_size(axi4xbar_auto_in_aw_bits_size),
    .auto_in_aw_bits_burst(axi4xbar_auto_in_aw_bits_burst),
    .auto_in_aw_bits_lock(axi4xbar_auto_in_aw_bits_lock),
    .auto_in_aw_bits_cache(axi4xbar_auto_in_aw_bits_cache),
    .auto_in_aw_bits_prot(axi4xbar_auto_in_aw_bits_prot),
    .auto_in_w_ready(axi4xbar_auto_in_w_ready),
    .auto_in_w_valid(axi4xbar_auto_in_w_valid),
    .auto_in_w_bits_data(axi4xbar_auto_in_w_bits_data),
    .auto_in_w_bits_strb(axi4xbar_auto_in_w_bits_strb),
    .auto_in_w_bits_last(axi4xbar_auto_in_w_bits_last),
    .auto_in_b_ready(axi4xbar_auto_in_b_ready),
    .auto_in_b_valid(axi4xbar_auto_in_b_valid),
    .auto_in_b_bits_id(axi4xbar_auto_in_b_bits_id),
    .auto_in_b_bits_resp(axi4xbar_auto_in_b_bits_resp),
    .auto_in_ar_ready(axi4xbar_auto_in_ar_ready),
    .auto_in_ar_valid(axi4xbar_auto_in_ar_valid),
    .auto_in_ar_bits_id(axi4xbar_auto_in_ar_bits_id),
    .auto_in_ar_bits_addr(axi4xbar_auto_in_ar_bits_addr),
    .auto_in_ar_bits_len(axi4xbar_auto_in_ar_bits_len),
    .auto_in_ar_bits_size(axi4xbar_auto_in_ar_bits_size),
    .auto_in_ar_bits_burst(axi4xbar_auto_in_ar_bits_burst),
    .auto_in_ar_bits_lock(axi4xbar_auto_in_ar_bits_lock),
    .auto_in_ar_bits_cache(axi4xbar_auto_in_ar_bits_cache),
    .auto_in_ar_bits_prot(axi4xbar_auto_in_ar_bits_prot),
    .auto_in_r_ready(axi4xbar_auto_in_r_ready),
    .auto_in_r_valid(axi4xbar_auto_in_r_valid),
    .auto_in_r_bits_id(axi4xbar_auto_in_r_bits_id),
    .auto_in_r_bits_data(axi4xbar_auto_in_r_bits_data),
    .auto_in_r_bits_resp(axi4xbar_auto_in_r_bits_resp),
    .auto_in_r_bits_last(axi4xbar_auto_in_r_bits_last),
    .auto_out_1_aw_ready(axi4xbar_auto_out_1_aw_ready),
    .auto_out_1_aw_valid(axi4xbar_auto_out_1_aw_valid),
    .auto_out_1_aw_bits_id(axi4xbar_auto_out_1_aw_bits_id),
    .auto_out_1_aw_bits_addr(axi4xbar_auto_out_1_aw_bits_addr),
    .auto_out_1_aw_bits_len(axi4xbar_auto_out_1_aw_bits_len),
    .auto_out_1_aw_bits_size(axi4xbar_auto_out_1_aw_bits_size),
    .auto_out_1_aw_bits_burst(axi4xbar_auto_out_1_aw_bits_burst),
    .auto_out_1_aw_bits_lock(axi4xbar_auto_out_1_aw_bits_lock),
    .auto_out_1_aw_bits_cache(axi4xbar_auto_out_1_aw_bits_cache),
    .auto_out_1_aw_bits_prot(axi4xbar_auto_out_1_aw_bits_prot),
    .auto_out_1_w_ready(axi4xbar_auto_out_1_w_ready),
    .auto_out_1_w_valid(axi4xbar_auto_out_1_w_valid),
    .auto_out_1_w_bits_data(axi4xbar_auto_out_1_w_bits_data),
    .auto_out_1_w_bits_strb(axi4xbar_auto_out_1_w_bits_strb),
    .auto_out_1_w_bits_last(axi4xbar_auto_out_1_w_bits_last),
    .auto_out_1_b_ready(axi4xbar_auto_out_1_b_ready),
    .auto_out_1_b_valid(axi4xbar_auto_out_1_b_valid),
    .auto_out_1_b_bits_id(axi4xbar_auto_out_1_b_bits_id),
    .auto_out_1_b_bits_resp(axi4xbar_auto_out_1_b_bits_resp),
    .auto_out_1_ar_ready(axi4xbar_auto_out_1_ar_ready),
    .auto_out_1_ar_valid(axi4xbar_auto_out_1_ar_valid),
    .auto_out_1_ar_bits_id(axi4xbar_auto_out_1_ar_bits_id),
    .auto_out_1_ar_bits_addr(axi4xbar_auto_out_1_ar_bits_addr),
    .auto_out_1_ar_bits_len(axi4xbar_auto_out_1_ar_bits_len),
    .auto_out_1_ar_bits_size(axi4xbar_auto_out_1_ar_bits_size),
    .auto_out_1_ar_bits_burst(axi4xbar_auto_out_1_ar_bits_burst),
    .auto_out_1_ar_bits_lock(axi4xbar_auto_out_1_ar_bits_lock),
    .auto_out_1_ar_bits_cache(axi4xbar_auto_out_1_ar_bits_cache),
    .auto_out_1_ar_bits_prot(axi4xbar_auto_out_1_ar_bits_prot),
    .auto_out_1_r_ready(axi4xbar_auto_out_1_r_ready),
    .auto_out_1_r_valid(axi4xbar_auto_out_1_r_valid),
    .auto_out_1_r_bits_id(axi4xbar_auto_out_1_r_bits_id),
    .auto_out_1_r_bits_data(axi4xbar_auto_out_1_r_bits_data),
    .auto_out_1_r_bits_resp(axi4xbar_auto_out_1_r_bits_resp),
    .auto_out_1_r_bits_last(axi4xbar_auto_out_1_r_bits_last),
    .auto_out_0_aw_ready(axi4xbar_auto_out_0_aw_ready),
    .auto_out_0_aw_valid(axi4xbar_auto_out_0_aw_valid),
    .auto_out_0_aw_bits_id(axi4xbar_auto_out_0_aw_bits_id),
    .auto_out_0_aw_bits_addr(axi4xbar_auto_out_0_aw_bits_addr),
    .auto_out_0_w_ready(axi4xbar_auto_out_0_w_ready),
    .auto_out_0_w_valid(axi4xbar_auto_out_0_w_valid),
    .auto_out_0_w_bits_data(axi4xbar_auto_out_0_w_bits_data),
    .auto_out_0_w_bits_strb(axi4xbar_auto_out_0_w_bits_strb),
    .auto_out_0_w_bits_last(axi4xbar_auto_out_0_w_bits_last),
    .auto_out_0_b_ready(axi4xbar_auto_out_0_b_ready),
    .auto_out_0_b_valid(axi4xbar_auto_out_0_b_valid),
    .auto_out_0_b_bits_id(axi4xbar_auto_out_0_b_bits_id),
    .auto_out_0_ar_ready(axi4xbar_auto_out_0_ar_ready),
    .auto_out_0_ar_valid(axi4xbar_auto_out_0_ar_valid),
    .auto_out_0_ar_bits_id(axi4xbar_auto_out_0_ar_bits_id),
    .auto_out_0_ar_bits_addr(axi4xbar_auto_out_0_ar_bits_addr),
    .auto_out_0_ar_bits_len(axi4xbar_auto_out_0_ar_bits_len),
    .auto_out_0_ar_bits_size(axi4xbar_auto_out_0_ar_bits_size),
    .auto_out_0_ar_bits_burst(axi4xbar_auto_out_0_ar_bits_burst),
    .auto_out_0_r_ready(axi4xbar_auto_out_0_r_ready),
    .auto_out_0_r_valid(axi4xbar_auto_out_0_r_valid),
    .auto_out_0_r_bits_id(axi4xbar_auto_out_0_r_bits_id),
    .auto_out_0_r_bits_data(axi4xbar_auto_out_0_r_bits_data),
    .auto_out_0_r_bits_last(axi4xbar_auto_out_0_r_bits_last)
  );
  SimAXIRAM axi_ram ( // @[SocLite.scala 348:27]
    .clock(axi_ram_clock),
    .reset(axi_ram_reset),
    .auto_in_aw_ready(axi_ram_auto_in_aw_ready),
    .auto_in_aw_valid(axi_ram_auto_in_aw_valid),
    .auto_in_aw_bits_id(axi_ram_auto_in_aw_bits_id),
    .auto_in_aw_bits_addr(axi_ram_auto_in_aw_bits_addr),
    .auto_in_w_ready(axi_ram_auto_in_w_ready),
    .auto_in_w_valid(axi_ram_auto_in_w_valid),
    .auto_in_w_bits_data(axi_ram_auto_in_w_bits_data),
    .auto_in_w_bits_strb(axi_ram_auto_in_w_bits_strb),
    .auto_in_w_bits_last(axi_ram_auto_in_w_bits_last),
    .auto_in_b_ready(axi_ram_auto_in_b_ready),
    .auto_in_b_valid(axi_ram_auto_in_b_valid),
    .auto_in_b_bits_id(axi_ram_auto_in_b_bits_id),
    .auto_in_ar_ready(axi_ram_auto_in_ar_ready),
    .auto_in_ar_valid(axi_ram_auto_in_ar_valid),
    .auto_in_ar_bits_id(axi_ram_auto_in_ar_bits_id),
    .auto_in_ar_bits_addr(axi_ram_auto_in_ar_bits_addr),
    .auto_in_ar_bits_len(axi_ram_auto_in_ar_bits_len),
    .auto_in_ar_bits_size(axi_ram_auto_in_ar_bits_size),
    .auto_in_ar_bits_burst(axi_ram_auto_in_ar_bits_burst),
    .auto_in_r_ready(axi_ram_auto_in_r_ready),
    .auto_in_r_valid(axi_ram_auto_in_r_valid),
    .auto_in_r_bits_id(axi_ram_auto_in_r_bits_id),
    .auto_in_r_bits_data(axi_ram_auto_in_r_bits_data),
    .auto_in_r_bits_last(axi_ram_auto_in_r_bits_last)
  );
  ConfregWrapper confreg_wrapper ( // @[SocLite.scala 350:35]
    .clock(confreg_wrapper_clock),
    .auto_in_aw_ready(confreg_wrapper_auto_in_aw_ready),
    .auto_in_aw_valid(confreg_wrapper_auto_in_aw_valid),
    .auto_in_aw_bits_id(confreg_wrapper_auto_in_aw_bits_id),
    .auto_in_aw_bits_addr(confreg_wrapper_auto_in_aw_bits_addr),
    .auto_in_aw_bits_len(confreg_wrapper_auto_in_aw_bits_len),
    .auto_in_aw_bits_size(confreg_wrapper_auto_in_aw_bits_size),
    .auto_in_aw_bits_burst(confreg_wrapper_auto_in_aw_bits_burst),
    .auto_in_aw_bits_lock(confreg_wrapper_auto_in_aw_bits_lock),
    .auto_in_aw_bits_cache(confreg_wrapper_auto_in_aw_bits_cache),
    .auto_in_aw_bits_prot(confreg_wrapper_auto_in_aw_bits_prot),
    .auto_in_w_ready(confreg_wrapper_auto_in_w_ready),
    .auto_in_w_valid(confreg_wrapper_auto_in_w_valid),
    .auto_in_w_bits_data(confreg_wrapper_auto_in_w_bits_data),
    .auto_in_w_bits_strb(confreg_wrapper_auto_in_w_bits_strb),
    .auto_in_w_bits_last(confreg_wrapper_auto_in_w_bits_last),
    .auto_in_b_ready(confreg_wrapper_auto_in_b_ready),
    .auto_in_b_valid(confreg_wrapper_auto_in_b_valid),
    .auto_in_b_bits_id(confreg_wrapper_auto_in_b_bits_id),
    .auto_in_b_bits_resp(confreg_wrapper_auto_in_b_bits_resp),
    .auto_in_ar_ready(confreg_wrapper_auto_in_ar_ready),
    .auto_in_ar_valid(confreg_wrapper_auto_in_ar_valid),
    .auto_in_ar_bits_id(confreg_wrapper_auto_in_ar_bits_id),
    .auto_in_ar_bits_addr(confreg_wrapper_auto_in_ar_bits_addr),
    .auto_in_ar_bits_len(confreg_wrapper_auto_in_ar_bits_len),
    .auto_in_ar_bits_size(confreg_wrapper_auto_in_ar_bits_size),
    .auto_in_ar_bits_burst(confreg_wrapper_auto_in_ar_bits_burst),
    .auto_in_ar_bits_lock(confreg_wrapper_auto_in_ar_bits_lock),
    .auto_in_ar_bits_cache(confreg_wrapper_auto_in_ar_bits_cache),
    .auto_in_ar_bits_prot(confreg_wrapper_auto_in_ar_bits_prot),
    .auto_in_r_ready(confreg_wrapper_auto_in_r_ready),
    .auto_in_r_valid(confreg_wrapper_auto_in_r_valid),
    .auto_in_r_bits_id(confreg_wrapper_auto_in_r_bits_id),
    .auto_in_r_bits_data(confreg_wrapper_auto_in_r_bits_data),
    .auto_in_r_bits_resp(confreg_wrapper_auto_in_r_bits_resp),
    .auto_in_r_bits_last(confreg_wrapper_auto_in_r_bits_last)
  );
  assign debug_wb_pc = axi_cpu_debug_wb_pc; // @[SocLite.scala 358:11]
  assign debug_wb_rf_wen = axi_cpu_debug_wb_rf_wen; // @[SocLite.scala 358:11]
  assign debug_wb_rf_wnum = axi_cpu_debug_wb_rf_wnum; // @[SocLite.scala 358:11]
  assign debug_wb_rf_wdata = axi_cpu_debug_wb_rf_wdata; // @[SocLite.scala 358:11]
  assign axi_cpu_clock = clock;
  assign axi_cpu_reset = reset;
  assign axi_cpu_auto_out_aw_ready = axi4xbar_auto_in_aw_ready; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_w_ready = axi4xbar_auto_in_w_ready; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_b_valid = axi4xbar_auto_in_b_valid; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_b_bits_id = axi4xbar_auto_in_b_bits_id; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_b_bits_resp = axi4xbar_auto_in_b_bits_resp; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_ar_ready = axi4xbar_auto_in_ar_ready; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_r_valid = axi4xbar_auto_in_r_valid; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_r_bits_id = axi4xbar_auto_in_r_bits_id; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_r_bits_data = axi4xbar_auto_in_r_bits_data; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_r_bits_resp = axi4xbar_auto_in_r_bits_resp; // @[LazyModule.scala 298:16]
  assign axi_cpu_auto_out_r_bits_last = axi4xbar_auto_in_r_bits_last; // @[LazyModule.scala 298:16]
  assign axi4xbar_clock = clock;
  assign axi4xbar_reset = reset;
  assign axi4xbar_auto_in_aw_valid = axi_cpu_auto_out_aw_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_id = axi_cpu_auto_out_aw_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_addr = axi_cpu_auto_out_aw_bits_addr; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_len = axi_cpu_auto_out_aw_bits_len; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_size = axi_cpu_auto_out_aw_bits_size; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_burst = axi_cpu_auto_out_aw_bits_burst; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_lock = axi_cpu_auto_out_aw_bits_lock; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_cache = axi_cpu_auto_out_aw_bits_cache; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_aw_bits_prot = axi_cpu_auto_out_aw_bits_prot; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_w_valid = axi_cpu_auto_out_w_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_w_bits_data = axi_cpu_auto_out_w_bits_data; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_w_bits_strb = axi_cpu_auto_out_w_bits_strb; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_w_bits_last = axi_cpu_auto_out_w_bits_last; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_b_ready = axi_cpu_auto_out_b_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_valid = axi_cpu_auto_out_ar_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_id = axi_cpu_auto_out_ar_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_addr = axi_cpu_auto_out_ar_bits_addr; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_len = axi_cpu_auto_out_ar_bits_len; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_size = axi_cpu_auto_out_ar_bits_size; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_burst = axi_cpu_auto_out_ar_bits_burst; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_lock = axi_cpu_auto_out_ar_bits_lock; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_cache = axi_cpu_auto_out_ar_bits_cache; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_ar_bits_prot = axi_cpu_auto_out_ar_bits_prot; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_in_r_ready = axi_cpu_auto_out_r_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_aw_ready = confreg_wrapper_auto_in_aw_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_w_ready = confreg_wrapper_auto_in_w_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_b_valid = confreg_wrapper_auto_in_b_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_b_bits_id = confreg_wrapper_auto_in_b_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_b_bits_resp = confreg_wrapper_auto_in_b_bits_resp; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_ar_ready = confreg_wrapper_auto_in_ar_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_r_valid = confreg_wrapper_auto_in_r_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_r_bits_id = confreg_wrapper_auto_in_r_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_r_bits_data = confreg_wrapper_auto_in_r_bits_data; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_r_bits_resp = confreg_wrapper_auto_in_r_bits_resp; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_1_r_bits_last = confreg_wrapper_auto_in_r_bits_last; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_aw_ready = axi_ram_auto_in_aw_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_w_ready = axi_ram_auto_in_w_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_b_valid = axi_ram_auto_in_b_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_b_bits_id = axi_ram_auto_in_b_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_ar_ready = axi_ram_auto_in_ar_ready; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_r_valid = axi_ram_auto_in_r_valid; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_r_bits_id = axi_ram_auto_in_r_bits_id; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_r_bits_data = axi_ram_auto_in_r_bits_data; // @[LazyModule.scala 298:16]
  assign axi4xbar_auto_out_0_r_bits_last = axi_ram_auto_in_r_bits_last; // @[LazyModule.scala 298:16]
  assign axi_ram_clock = clock;
  assign axi_ram_reset = reset;
  assign axi_ram_auto_in_aw_valid = axi4xbar_auto_out_0_aw_valid; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_aw_bits_id = axi4xbar_auto_out_0_aw_bits_id; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_aw_bits_addr = axi4xbar_auto_out_0_aw_bits_addr; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_w_valid = axi4xbar_auto_out_0_w_valid; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_w_bits_data = axi4xbar_auto_out_0_w_bits_data; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_w_bits_strb = axi4xbar_auto_out_0_w_bits_strb; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_w_bits_last = axi4xbar_auto_out_0_w_bits_last; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_b_ready = axi4xbar_auto_out_0_b_ready; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_valid = axi4xbar_auto_out_0_ar_valid; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_bits_id = axi4xbar_auto_out_0_ar_bits_id; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_bits_addr = axi4xbar_auto_out_0_ar_bits_addr; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_bits_len = axi4xbar_auto_out_0_ar_bits_len; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_bits_size = axi4xbar_auto_out_0_ar_bits_size; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_ar_bits_burst = axi4xbar_auto_out_0_ar_bits_burst; // @[LazyModule.scala 298:16]
  assign axi_ram_auto_in_r_ready = axi4xbar_auto_out_0_r_ready; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_clock = clock;
  assign confreg_wrapper_auto_in_aw_valid = axi4xbar_auto_out_1_aw_valid; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_id = axi4xbar_auto_out_1_aw_bits_id; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_addr = axi4xbar_auto_out_1_aw_bits_addr; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_len = axi4xbar_auto_out_1_aw_bits_len; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_size = axi4xbar_auto_out_1_aw_bits_size; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_burst = axi4xbar_auto_out_1_aw_bits_burst; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_lock = axi4xbar_auto_out_1_aw_bits_lock; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_cache = axi4xbar_auto_out_1_aw_bits_cache; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_aw_bits_prot = axi4xbar_auto_out_1_aw_bits_prot; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_w_valid = axi4xbar_auto_out_1_w_valid; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_w_bits_data = axi4xbar_auto_out_1_w_bits_data; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_w_bits_strb = axi4xbar_auto_out_1_w_bits_strb; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_w_bits_last = axi4xbar_auto_out_1_w_bits_last; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_b_ready = axi4xbar_auto_out_1_b_ready; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_valid = axi4xbar_auto_out_1_ar_valid; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_id = axi4xbar_auto_out_1_ar_bits_id; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_addr = axi4xbar_auto_out_1_ar_bits_addr; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_len = axi4xbar_auto_out_1_ar_bits_len; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_size = axi4xbar_auto_out_1_ar_bits_size; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_burst = axi4xbar_auto_out_1_ar_bits_burst; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_lock = axi4xbar_auto_out_1_ar_bits_lock; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_cache = axi4xbar_auto_out_1_ar_bits_cache; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_ar_bits_prot = axi4xbar_auto_out_1_ar_bits_prot; // @[LazyModule.scala 298:16]
  assign confreg_wrapper_auto_in_r_ready = axi4xbar_auto_out_1_r_ready; // @[LazyModule.scala 298:16]
endmodule
